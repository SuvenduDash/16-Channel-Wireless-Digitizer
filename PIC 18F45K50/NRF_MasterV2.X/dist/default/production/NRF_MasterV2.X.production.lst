

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Thu May 25 16:24:47 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    30                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    31                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    32  0000                     
    33                           ; Version 1.41
    34                           ; Generated 25/01/2017 GMT
    35                           ; 
    36                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC18F45K50 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67  0000                     _ANSELA	set	3931
    68  0000                     _ANSELE	set	3935
    69  0000                     _ANSELD	set	3934
    70  0000                     _ANSELB	set	3932
    71  0000                     _ANSELC	set	3933
    72  0000                     _ANSELBbits	set	3932
    73  0000                     _WPUB	set	3973
    74  0000                     _TRISD	set	3989
    75  0000                     _TRISC	set	3988
    76  0000                     _TRISB	set	3987
    77  0000                     _TRISA	set	3986
    78  0000                     _TRISE	set	3990
    79  0000                     _LATC	set	3979
    80  0000                     _LATB	set	3978
    81  0000                     _LATA	set	3977
    82  0000                     _LATD	set	3980
    83  0000                     _LATE	set	3981
    84  0000                     _ACTCON	set	4021
    85  0000                     _OSCTUNE	set	3995
    86  0000                     _OSCCON2	set	4050
    87  0000                     _OSCCON	set	4051
    88  0000                     _ADCON0bits	set	4034
    89  0000                     _ADRESH	set	4036
    90  0000                     _ADRESL	set	4035
    91  0000                     _ADCON2	set	4032
    92  0000                     _ADCON1	set	4033
    93  0000                     _ADCON0	set	4034
    94  0000                     _INTCONbits	set	4082
    95  0000                     _PIR1bits	set	3998
    96  0000                     _SSP1BUF	set	4041
    97  0000                     _SSP1STATbits	set	4039
    98  0000                     _TRISCbits	set	3988
    99  0000                     _TRISAbits	set	3986
   100  0000                     _SSP1CON1bits	set	4038
   101  0000                     _INTCON3bits	set	4080
   102  0000                     _INTCON2bits	set	4081
   103  0000                     _LATBbits	set	3978
   104  0000                     _TRISBbits	set	3987
   105                           
   106                           ; #config settings
   107  0000                     
   108                           	psect	cinit
   109  000450                     __pcinit:
   110                           	opt stack 0
   111  000450                     start_initialization:
   112                           	opt stack 0
   113  000450                     __initialization:
   114                           	opt stack 0
   115                           
   116                           ; Clear objects allocated to COMRAM (16 bytes)
   117  000450  EE00  F024         	lfsr	0,__pbssCOMRAM
   118  000454  0E10               	movlw	16
   119  000456                     clear_0:
   120  000456  6AEE               	clrf	postinc0,c
   121  000458  06E8               	decf	wreg,f,c
   122  00045A  E1FD               	bnz	clear_0
   123  00045C                     end_of_initialization:
   124                           	opt stack 0
   125  00045C                     __end_of__initialization:
   126                           	opt stack 0
   127  00045C  9034               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   128  00045E  9234               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   129  000460  0E00               	movlw	low (__Lmediumconst shr (0+16))
   130  000462  6EF8               	movwf	tblptru,c
   131  000464  0100               	movlb	0
   132  000466  EF22  F001         	goto	_main	;jump to C main() function
   133                           tblptru	equ	0xFF8
   134                           postinc0	equ	0xFEE
   135                           wreg	equ	0xFE8
   136                           
   137                           	psect	bssCOMRAM
   138  000024                     __pbssCOMRAM:
   139                           	opt stack 0
   140  000024                     _received_string:
   141                           	opt stack 0
   142  000024                     	ds	15
   143  000033                     _PTX:
   144                           	opt stack 0
   145  000033                     	ds	1
   146                           tblptru	equ	0xFF8
   147                           postinc0	equ	0xFEE
   148                           wreg	equ	0xFE8
   149                           
   150                           	psect	cstackBANK0
   151  000060                     __pcstackBANK0:
   152                           	opt stack 0
   153  000060                     main@hall:
   154                           	opt stack 0
   155                           
   156                           ; 32 bytes @ 0x0
   157  000060                     	ds	32
   158  000080                     main@convertedValue:
   159                           	opt stack 0
   160                           
   161                           ; 2 bytes @ 0x20
   162  000080                     	ds	2
   163  000082                     main@k:
   164                           	opt stack 0
   165                           
   166                           ; 1 bytes @ 0x22
   167  000082                     	ds	1
   168                           tblptru	equ	0xFF8
   169                           postinc0	equ	0xFEE
   170                           wreg	equ	0xFE8
   171                           
   172                           	psect	cstackCOMRAM
   173  000001                     __pcstackCOMRAM:
   174                           	opt stack 0
   175  000001                     i2spi_fast_shift@data:
   176                           	opt stack 0
   177                           
   178                           ; 1 bytes @ 0x0
   179  000001                     	ds	1
   180  000002                     i2wl_module_config_register@value:
   181                           	opt stack 0
   182                           
   183                           ; 1 bytes @ 0x1
   184  000002                     	ds	1
   185  000003                     i2wl_module_config_register@reg:
   186                           	opt stack 0
   187                           
   188                           ; 1 bytes @ 0x2
   189  000003                     	ds	1
   190  000004                     ??_ISR:
   191                           
   192                           ; 1 bytes @ 0x3
   193  000004                     	ds	14
   194  000012                     ISR@status:
   195                           	opt stack 0
   196                           
   197                           ; 1 bytes @ 0x11
   198  000012                     	ds	1
   199  000013                     ?_ADC_StartConversion:
   200                           	opt stack 0
   201  000013                     ?_ADC_GetConversionResult:
   202                           	opt stack 0
   203  000013                     ?___wmul:
   204                           	opt stack 0
   205  000013                     spi_fast_shift@data:
   206                           	opt stack 0
   207  000013                     spi_transmit_sync@data:
   208                           	opt stack 0
   209  000013                     __delay_10ms@length:
   210                           	opt stack 0
   211  000013                     ___wmul@multiplier:
   212                           	opt stack 0
   213                           
   214                           ; 2 bytes @ 0x12
   215  000013                     	ds	1
   216  000014                     wl_module_config_register@value:
   217                           	opt stack 0
   218                           
   219                           ; 1 bytes @ 0x13
   220  000014                     	ds	1
   221  000015                     ??_ADC_GetConversionResult:
   222  000015                     ??__delay_10ms:
   223  000015                     wl_module_config_register@reg:
   224                           	opt stack 0
   225  000015                     spi_transmit_sync@length:
   226                           	opt stack 0
   227  000015                     ___wmul@multiplicand:
   228                           	opt stack 0
   229                           
   230                           ; 2 bytes @ 0x14
   231  000015                     	ds	2
   232  000017                     spi_transmit_sync@tmp:
   233                           	opt stack 0
   234  000017                     ___wmul@product:
   235                           	opt stack 0
   236                           
   237                           ; 2 bytes @ 0x16
   238  000017                     	ds	1
   239  000018                     wl_module_write_register@value:
   240                           	opt stack 0
   241  000018                     wl_module_send@value:
   242                           	opt stack 0
   243                           
   244                           ; 2 bytes @ 0x17
   245  000018                     	ds	1
   246  000019                     ?___lwdiv:
   247                           	opt stack 0
   248  000019                     ___lwdiv@dividend:
   249                           	opt stack 0
   250                           
   251                           ; 2 bytes @ 0x18
   252  000019                     	ds	1
   253  00001A                     wl_module_write_register@len:
   254                           	opt stack 0
   255  00001A                     wl_module_send@len:
   256                           	opt stack 0
   257                           
   258                           ; 1 bytes @ 0x19
   259  00001A                     	ds	1
   260  00001B                     wl_module_write_register@reg:
   261                           	opt stack 0
   262  00001B                     ___lwdiv@divisor:
   263                           	opt stack 0
   264                           
   265                           ; 2 bytes @ 0x1A
   266  00001B                     	ds	1
   267  00001C                     wl_module_set_RADDR@adr:
   268                           	opt stack 0
   269  00001C                     wl_module_set_TADDR@adr:
   270                           	opt stack 0
   271                           
   272                           ; 2 bytes @ 0x1B
   273  00001C                     	ds	1
   274  00001D                     ___lwdiv@counter:
   275                           	opt stack 0
   276                           
   277                           ; 1 bytes @ 0x1C
   278  00001D                     	ds	1
   279  00001E                     wl_module_tx_config@tx_nr:
   280                           	opt stack 0
   281  00001E                     ___lwdiv@quotient:
   282                           	opt stack 0
   283                           
   284                           ; 2 bytes @ 0x1D
   285  00001E                     	ds	1
   286  00001F                     wl_module_tx_config@tx_addr:
   287                           	opt stack 0
   288                           
   289                           ; 5 bytes @ 0x1E
   290  00001F                     	ds	5
   291  000024                     tblptru	equ	0xFF8
   292                           postinc0	equ	0xFEE
   293                           wreg	equ	0xFE8
   294                           
   295                           ; 1 bytes @ 0x23
   296 ;;
   297 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   298 ;;
   299 ;; *************** function _main *****************
   300 ;; Defined at:
   301 ;;		line 40 in file "main.c"
   302 ;; Parameters:    Size  Location     Type
   303 ;;		None
   304 ;; Auto vars:     Size  Location     Type
   305 ;;  hall           32    0[BANK0 ] unsigned char [32]
   306 ;;  convertedVal    2   32[BANK0 ] unsigned int 
   307 ;;  k               1   34[BANK0 ] unsigned char 
   308 ;; Return value:  Size  Location     Type
   309 ;;                  2  229[None  ] int 
   310 ;; Registers used:
   311 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   312 ;; Tracked objects:
   313 ;;		On entry : 0/0
   314 ;;		On exit  : 0/0
   315 ;;		Unchanged: 0/0
   316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   317 ;;      Params:         0       0       0       0       0       0       0       0       0
   318 ;;      Locals:         0      35       0       0       0       0       0       0       0
   319 ;;      Temps:          0       0       0       0       0       0       0       0       0
   320 ;;      Totals:         0      35       0       0       0       0       0       0       0
   321 ;;Total ram usage:       35 bytes
   322 ;; Hardware stack levels required when called:    7
   323 ;; This function calls:
   324 ;;		_ADC_GetConversionResult
   325 ;;		_ADC_IsConversionDone
   326 ;;		_ADC_StartConversion
   327 ;;		___lwdiv
   328 ;;		___wmul
   329 ;;		__delay_10ms
   330 ;;		_wl_module_init
   331 ;;		_wl_module_send
   332 ;;		_wl_module_tx_config
   333 ;; This function is called by:
   334 ;;		Startup code after reset
   335 ;; This function uses a non-reentrant model
   336 ;;
   337                           
   338                           	psect	text0
   339  000244                     __ptext0:
   340                           	opt stack 0
   341  000244                     _main:
   342                           	opt stack 24
   343                           
   344                           ;main.c: 42: unsigned char hall[32];
   345                           ;main.c: 43: uint16_t convertedValue = 0;
   346                           
   347                           ;incstack = 0
   348  000244  0E00               	movlw	0
   349  000246  0100               	movlb	0	; () banked
   350  000248  6F81               	movwf	(main@convertedValue+1)& (0+255),b
   351  00024A  0E00               	movlw	0
   352  00024C  6F80               	movwf	main@convertedValue& (0+255),b
   353                           
   354                           ; BSR set to: 0
   355                           ;main.c: 45: unsigned char k;
   356                           ;main.c: 52: wl_module_init();
   357  00024E  EC4D  F002         	call	_wl_module_init	;wreg free
   358                           
   359                           ;main.c: 53: _delay_10ms(5);
   360  000252  0E00               	movlw	0
   361  000254  6E14               	movwf	__delay_10ms@length+1,c
   362  000256  0E05               	movlw	5
   363  000258  6E13               	movwf	__delay_10ms@length,c
   364  00025A  EC18  F002         	call	__delay_10ms	;wreg free
   365                           
   366                           ;main.c: 55: INTCONbits.PEIE = 1;
   367  00025E  8CF2               	bsf	intcon,6,c	;volatile
   368                           
   369                           ;main.c: 56: INTCONbits.GIE = 1;
   370  000260  8EF2               	bsf	intcon,7,c	;volatile
   371                           
   372                           ;main.c: 58: wl_module_tx_config(0);
   373  000262  0E00               	movlw	0
   374  000264  EC67  F000         	call	_wl_module_tx_config
   375  000268                     l2066:
   376                           
   377                           ;main.c: 80: {
   378                           ;main.c: 81: convertedValue = 0;
   379  000268  0E00               	movlw	0
   380  00026A  0100               	movlb	0	; () banked
   381  00026C  6F81               	movwf	(main@convertedValue+1)& (0+255),b
   382  00026E  0E00               	movlw	0
   383  000270  6F80               	movwf	main@convertedValue& (0+255),b
   384                           
   385                           ; BSR set to: 0
   386                           ;main.c: 82: ADC_StartConversion(channel_AN0);
   387  000272  0E00               	movlw	0
   388  000274  6E14               	movwf	?_ADC_StartConversion+1,c
   389  000276  0E00               	movlw	0
   390  000278  6E13               	movwf	?_ADC_StartConversion,c
   391  00027A  EC8F  F002         	call	_ADC_StartConversion	;wreg free
   392  00027E                     l2070:
   393  00027E  EC89  F002         	call	_ADC_IsConversionDone	;wreg free
   394  000282  0900               	iorlw	0
   395  000284  B4D8               	btfsc	status,2,c
   396  000286  D7FB               	goto	l2070
   397                           
   398                           ;main.c: 84: convertedValue = ADC_GetConversionResult();
   399  000288  EC6F  F002         	call	_ADC_GetConversionResult	;wreg free
   400  00028C  C013  F080         	movff	?_ADC_GetConversionResult,main@convertedValue
   401  000290  C014  F081         	movff	?_ADC_GetConversionResult+1,main@convertedValue+1
   402                           
   403                           ;main.c: 86: for (k=0; k<=32-1; k++)
   404  000294  0E00               	movlw	0
   405  000296  0100               	movlb	0	; () banked
   406  000298  6F82               	movwf	main@k& (0+255),b
   407  00029A                     l2076:
   408                           
   409                           ; BSR set to: 0
   410  00029A  0E1F               	movlw	31
   411  00029C  0100               	movlb	0	; () banked
   412  00029E  6582               	cpfsgt	main@k& (0+255),b
   413  0002A0  D001               	goto	l2080
   414  0002A2  D019               	goto	l2086
   415  0002A4                     l2080:
   416                           
   417                           ; BSR set to: 0
   418                           ;main.c: 87: k=convertedValue*5/1023;
   419  0002A4  C080  F013         	movff	main@convertedValue,___wmul@multiplier
   420  0002A8  C081  F014         	movff	main@convertedValue+1,___wmul@multiplier+1
   421  0002AC  0E00               	movlw	0
   422  0002AE  6E16               	movwf	___wmul@multiplicand+1,c
   423  0002B0  0E05               	movlw	5
   424  0002B2  6E15               	movwf	___wmul@multiplicand,c
   425  0002B4  ECE3  F001         	call	___wmul	;wreg free
   426  0002B8  C013  F019         	movff	?___wmul,___lwdiv@dividend
   427  0002BC  C014  F01A         	movff	?___wmul+1,___lwdiv@dividend+1
   428  0002C0  0E03               	movlw	3
   429  0002C2  6E1C               	movwf	___lwdiv@divisor+1,c
   430  0002C4  681B               	setf	___lwdiv@divisor,c
   431  0002C6  EC7F  F001         	call	___lwdiv	;wreg free
   432  0002CA  5019               	movf	?___lwdiv,w,c
   433  0002CC  0100               	movlb	0	; () banked
   434  0002CE  6F82               	movwf	main@k& (0+255),b
   435                           
   436                           ; BSR set to: 0
   437  0002D0  0100               	movlb	0	; () banked
   438  0002D2  2B82               	incf	main@k& (0+255),f,b
   439  0002D4  D7E2               	goto	l2076
   440  0002D6                     l2086:
   441                           
   442                           ; BSR set to: 0
   443                           ;main.c: 88: hall[k] = k;
   444  0002D6  0100               	movlb	0	; () banked
   445  0002D8  5182               	movf	main@k& (0+255),w,b
   446  0002DA  0D01               	mullw	1
   447  0002DC  0E60               	movlw	low main@hall
   448  0002DE  24F3               	addwf	prodl,w,c
   449  0002E0  6ED9               	movwf	fsr2l,c
   450  0002E2  0E00               	movlw	high main@hall
   451  0002E4  20F4               	addwfc	prodh,w,c
   452  0002E6  6EDA               	movwf	fsr2h,c
   453  0002E8  C082  FFDF         	movff	main@k,indf2
   454                           
   455                           ; BSR set to: 0
   456                           ;main.c: 90: wl_module_send(hall,32);
   457  0002EC  0E60               	movlw	low main@hall
   458  0002EE  6E18               	movwf	wl_module_send@value,c
   459  0002F0  0E00               	movlw	high main@hall
   460  0002F2  6E19               	movwf	wl_module_send@value+1,c
   461  0002F4  0E20               	movlw	32
   462  0002F6  6E1A               	movwf	wl_module_send@len,c
   463  0002F8  ECA8  F001         	call	_wl_module_send	;wreg free
   464  0002FC  D7B5               	goto	l2066
   465  0002FE                     __end_of_main:
   466                           	opt stack 0
   467                           tblptru	equ	0xFF8
   468                           prodh	equ	0xFF4
   469                           prodl	equ	0xFF3
   470                           intcon	equ	0xFF2
   471                           postinc0	equ	0xFEE
   472                           wreg	equ	0xFE8
   473                           indf2	equ	0xFDF
   474                           fsr2h	equ	0xFDA
   475                           fsr2l	equ	0xFD9
   476                           status	equ	0xFD8
   477                           
   478 ;; *************** function _wl_module_tx_config *****************
   479 ;; Defined at:
   480 ;;		line 107 in file "wl_module.c"
   481 ;; Parameters:    Size  Location     Type
   482 ;;  tx_nr           1    wreg     unsigned char 
   483 ;; Auto vars:     Size  Location     Type
   484 ;;  tx_nr           1   29[COMRAM] unsigned char 
   485 ;;  tx_addr         5   30[COMRAM] unsigned char [5]
   486 ;; Return value:  Size  Location     Type
   487 ;;                  1    wreg      void 
   488 ;; Registers used:
   489 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   490 ;; Tracked objects:
   491 ;;		On entry : 0/0
   492 ;;		On exit  : 0/0
   493 ;;		Unchanged: 0/0
   494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   495 ;;      Params:         0       0       0       0       0       0       0       0       0
   496 ;;      Locals:         6       0       0       0       0       0       0       0       0
   497 ;;      Temps:          0       0       0       0       0       0       0       0       0
   498 ;;      Totals:         6       0       0       0       0       0       0       0       0
   499 ;;Total ram usage:        6 bytes
   500 ;; Hardware stack levels used:    1
   501 ;; Hardware stack levels required when called:    6
   502 ;; This function calls:
   503 ;;		_wl_module_config_register
   504 ;;		_wl_module_set_RADDR
   505 ;;		_wl_module_set_TADDR
   506 ;; This function is called by:
   507 ;;		_main
   508 ;; This function uses a non-reentrant model
   509 ;;
   510                           
   511                           	psect	text1
   512  0000CE                     __ptext1:
   513                           	opt stack 0
   514  0000CE                     _wl_module_tx_config:
   515                           	opt stack 24
   516                           
   517                           ;incstack = 0
   518                           ;wl_module_tx_config@tx_nr stored from wreg
   519  0000CE  6E1E               	movwf	wl_module_tx_config@tx_nr,c
   520                           
   521                           ;wl_module.c: 109: unsigned char tx_addr[5];
   522                           ;wl_module.c: 112: wl_module_config_register(0x05,2);
   523  0000D0  0E02               	movlw	2
   524  0000D2  6E14               	movwf	wl_module_config_register@value,c
   525  0000D4  0E05               	movlw	5
   526  0000D6  EC41  F002         	call	_wl_module_config_register
   527                           
   528                           ;wl_module.c: 114: wl_module_config_register(0x06,(0x06 | 0x20));
   529  0000DA  0E26               	movlw	38
   530  0000DC  6E14               	movwf	wl_module_config_register@value,c
   531  0000DE  0E06               	movlw	6
   532  0000E0  EC41  F002         	call	_wl_module_config_register
   533                           
   534                           ;wl_module.c: 116: wl_module_config_register(0x00, ( (1<<6) | (1<<3) | (1<<2) ));
   535  0000E4  0E4C               	movlw	76
   536  0000E6  6E14               	movwf	wl_module_config_register@value,c
   537  0000E8  0E00               	movlw	0
   538  0000EA  EC41  F002         	call	_wl_module_config_register
   539                           
   540                           ;wl_module.c: 120: wl_module_config_register(0x04,(0x20 | 0x0F));
   541  0000EE  0E2F               	movlw	47
   542  0000F0  6E14               	movwf	wl_module_config_register@value,c
   543  0000F2  0E04               	movlw	4
   544  0000F4  EC41  F002         	call	_wl_module_config_register
   545                           
   546                           ;wl_module.c: 123: switch(tx_nr)
   547  0000F8  D08A               	goto	l1808
   548  0000FA                     l1770:
   549                           
   550                           ;wl_module.c: 126: tx_addr[0] = tx_addr[1] = tx_addr[2] = tx_addr[3] = tx_addr[4] = 0xE7
      +                          ;
   551  0000FA  0EE7               	movlw	231
   552  0000FC  6E23               	movwf	wl_module_tx_config@tx_addr+4,c
   553  0000FE  C023  F022         	movff	wl_module_tx_config@tx_addr+4,wl_module_tx_config@tx_addr+3
   554  000102  C022  F021         	movff	wl_module_tx_config@tx_addr+3,wl_module_tx_config@tx_addr+2
   555  000106  C021  F020         	movff	wl_module_tx_config@tx_addr+2,wl_module_tx_config@tx_addr+1
   556  00010A  C020  F01F         	movff	wl_module_tx_config@tx_addr+1,wl_module_tx_config@tx_addr
   557                           
   558                           ;wl_module.c: 127: wl_module_set_TADDR(tx_addr);
   559  00010E  0E1F               	movlw	low wl_module_tx_config@tx_addr
   560  000110  6E1C               	movwf	wl_module_set_TADDR@adr,c
   561  000112  0E00               	movlw	high wl_module_tx_config@tx_addr
   562  000114  6E1D               	movwf	wl_module_set_TADDR@adr+1,c
   563  000116  EC65  F002         	call	_wl_module_set_TADDR	;wreg free
   564                           
   565                           ;wl_module.c: 128: wl_module_set_RADDR(tx_addr);
   566  00011A  0E1F               	movlw	low wl_module_tx_config@tx_addr
   567  00011C  6E1C               	movwf	wl_module_set_RADDR@adr,c
   568  00011E  0E00               	movlw	high wl_module_tx_config@tx_addr
   569  000120  6E1D               	movwf	wl_module_set_RADDR@adr+1,c
   570  000122  EC35  F002         	call	_wl_module_set_RADDR	;wreg free
   571                           
   572                           ;wl_module.c: 129: break;
   573  000126  D086               	goto	l1810
   574  000128                     l1776:
   575                           
   576                           ;wl_module.c: 131: tx_addr[0] = tx_addr[1] = tx_addr[2] = tx_addr[3] = tx_addr[4] = 0xC2
      +                          ;
   577  000128  0EC2               	movlw	194
   578  00012A  6E23               	movwf	wl_module_tx_config@tx_addr+4,c
   579  00012C  C023  F022         	movff	wl_module_tx_config@tx_addr+4,wl_module_tx_config@tx_addr+3
   580  000130  C022  F021         	movff	wl_module_tx_config@tx_addr+3,wl_module_tx_config@tx_addr+2
   581  000134  C021  F020         	movff	wl_module_tx_config@tx_addr+2,wl_module_tx_config@tx_addr+1
   582  000138  C020  F01F         	movff	wl_module_tx_config@tx_addr+1,wl_module_tx_config@tx_addr
   583                           
   584                           ;wl_module.c: 132: wl_module_set_TADDR(tx_addr);
   585  00013C  0E1F               	movlw	low wl_module_tx_config@tx_addr
   586  00013E  6E1C               	movwf	wl_module_set_TADDR@adr,c
   587  000140  0E00               	movlw	high wl_module_tx_config@tx_addr
   588  000142  6E1D               	movwf	wl_module_set_TADDR@adr+1,c
   589  000144  EC65  F002         	call	_wl_module_set_TADDR	;wreg free
   590                           
   591                           ;wl_module.c: 133: wl_module_set_RADDR(tx_addr);
   592  000148  0E1F               	movlw	low wl_module_tx_config@tx_addr
   593  00014A  6E1C               	movwf	wl_module_set_RADDR@adr,c
   594  00014C  0E00               	movlw	high wl_module_tx_config@tx_addr
   595  00014E  6E1D               	movwf	wl_module_set_RADDR@adr+1,c
   596  000150  EC35  F002         	call	_wl_module_set_RADDR	;wreg free
   597                           
   598                           ;wl_module.c: 134: break;
   599  000154  D06F               	goto	l1810
   600  000156                     l1782:
   601                           
   602                           ;wl_module.c: 136: tx_addr[1] = tx_addr[2] = tx_addr[3] = tx_addr[4] = 0xC2;
   603  000156  0EC2               	movlw	194
   604  000158  6E23               	movwf	wl_module_tx_config@tx_addr+4,c
   605  00015A  C023  F022         	movff	wl_module_tx_config@tx_addr+4,wl_module_tx_config@tx_addr+3
   606  00015E  C022  F021         	movff	wl_module_tx_config@tx_addr+3,wl_module_tx_config@tx_addr+2
   607  000162  C021  F020         	movff	wl_module_tx_config@tx_addr+2,wl_module_tx_config@tx_addr+1
   608                           
   609                           ;wl_module.c: 137: tx_addr[0] = 0xC3;
   610  000166  0EC3               	movlw	195
   611  000168  6E1F               	movwf	wl_module_tx_config@tx_addr,c
   612                           
   613                           ;wl_module.c: 138: wl_module_set_TADDR(tx_addr);
   614  00016A  0E1F               	movlw	low wl_module_tx_config@tx_addr
   615  00016C  6E1C               	movwf	wl_module_set_TADDR@adr,c
   616  00016E  0E00               	movlw	high wl_module_tx_config@tx_addr
   617  000170  6E1D               	movwf	wl_module_set_TADDR@adr+1,c
   618  000172  EC65  F002         	call	_wl_module_set_TADDR	;wreg free
   619                           
   620                           ;wl_module.c: 139: wl_module_set_RADDR(tx_addr);
   621  000176  0E1F               	movlw	low wl_module_tx_config@tx_addr
   622  000178  6E1C               	movwf	wl_module_set_RADDR@adr,c
   623  00017A  0E00               	movlw	high wl_module_tx_config@tx_addr
   624  00017C  6E1D               	movwf	wl_module_set_RADDR@adr+1,c
   625  00017E  EC35  F002         	call	_wl_module_set_RADDR	;wreg free
   626                           
   627                           ;wl_module.c: 140: break;
   628  000182  D058               	goto	l1810
   629  000184                     l1788:
   630                           
   631                           ;wl_module.c: 142: tx_addr[1] = tx_addr[2] = tx_addr[3] = tx_addr[4] = 0xC2;
   632  000184  0EC2               	movlw	194
   633  000186  6E23               	movwf	wl_module_tx_config@tx_addr+4,c
   634  000188  C023  F022         	movff	wl_module_tx_config@tx_addr+4,wl_module_tx_config@tx_addr+3
   635  00018C  C022  F021         	movff	wl_module_tx_config@tx_addr+3,wl_module_tx_config@tx_addr+2
   636  000190  C021  F020         	movff	wl_module_tx_config@tx_addr+2,wl_module_tx_config@tx_addr+1
   637                           
   638                           ;wl_module.c: 143: tx_addr[0] = 0xC4;
   639  000194  0EC4               	movlw	196
   640  000196  6E1F               	movwf	wl_module_tx_config@tx_addr,c
   641                           
   642                           ;wl_module.c: 144: wl_module_set_TADDR(tx_addr);
   643  000198  0E1F               	movlw	low wl_module_tx_config@tx_addr
   644  00019A  6E1C               	movwf	wl_module_set_TADDR@adr,c
   645  00019C  0E00               	movlw	high wl_module_tx_config@tx_addr
   646  00019E  6E1D               	movwf	wl_module_set_TADDR@adr+1,c
   647  0001A0  EC65  F002         	call	_wl_module_set_TADDR	;wreg free
   648                           
   649                           ;wl_module.c: 145: wl_module_set_RADDR(tx_addr);
   650  0001A4  0E1F               	movlw	low wl_module_tx_config@tx_addr
   651  0001A6  6E1C               	movwf	wl_module_set_RADDR@adr,c
   652  0001A8  0E00               	movlw	high wl_module_tx_config@tx_addr
   653  0001AA  6E1D               	movwf	wl_module_set_RADDR@adr+1,c
   654  0001AC  EC35  F002         	call	_wl_module_set_RADDR	;wreg free
   655                           
   656                           ;wl_module.c: 146: break;
   657  0001B0  D041               	goto	l1810
   658  0001B2                     l1794:
   659                           
   660                           ;wl_module.c: 148: tx_addr[1] = tx_addr[2] = tx_addr[3] = tx_addr[4] = 0xC2;
   661  0001B2  0EC2               	movlw	194
   662  0001B4  6E23               	movwf	wl_module_tx_config@tx_addr+4,c
   663  0001B6  C023  F022         	movff	wl_module_tx_config@tx_addr+4,wl_module_tx_config@tx_addr+3
   664  0001BA  C022  F021         	movff	wl_module_tx_config@tx_addr+3,wl_module_tx_config@tx_addr+2
   665  0001BE  C021  F020         	movff	wl_module_tx_config@tx_addr+2,wl_module_tx_config@tx_addr+1
   666                           
   667                           ;wl_module.c: 149: tx_addr[0] = 0xC5;
   668  0001C2  0EC5               	movlw	197
   669  0001C4  6E1F               	movwf	wl_module_tx_config@tx_addr,c
   670                           
   671                           ;wl_module.c: 150: wl_module_set_TADDR(tx_addr);
   672  0001C6  0E1F               	movlw	low wl_module_tx_config@tx_addr
   673  0001C8  6E1C               	movwf	wl_module_set_TADDR@adr,c
   674  0001CA  0E00               	movlw	high wl_module_tx_config@tx_addr
   675  0001CC  6E1D               	movwf	wl_module_set_TADDR@adr+1,c
   676  0001CE  EC65  F002         	call	_wl_module_set_TADDR	;wreg free
   677                           
   678                           ;wl_module.c: 151: wl_module_set_RADDR(tx_addr);
   679  0001D2  0E1F               	movlw	low wl_module_tx_config@tx_addr
   680  0001D4  6E1C               	movwf	wl_module_set_RADDR@adr,c
   681  0001D6  0E00               	movlw	high wl_module_tx_config@tx_addr
   682  0001D8  6E1D               	movwf	wl_module_set_RADDR@adr+1,c
   683  0001DA  EC35  F002         	call	_wl_module_set_RADDR	;wreg free
   684                           
   685                           ;wl_module.c: 152: break;
   686  0001DE  D02A               	goto	l1810
   687  0001E0                     l1800:
   688                           
   689                           ;wl_module.c: 154: tx_addr[1] = tx_addr[2] = tx_addr[3] = tx_addr[4] = 0xC2;
   690  0001E0  0EC2               	movlw	194
   691  0001E2  6E23               	movwf	wl_module_tx_config@tx_addr+4,c
   692  0001E4  C023  F022         	movff	wl_module_tx_config@tx_addr+4,wl_module_tx_config@tx_addr+3
   693  0001E8  C022  F021         	movff	wl_module_tx_config@tx_addr+3,wl_module_tx_config@tx_addr+2
   694  0001EC  C021  F020         	movff	wl_module_tx_config@tx_addr+2,wl_module_tx_config@tx_addr+1
   695                           
   696                           ;wl_module.c: 155: tx_addr[0] = 0xC6;
   697  0001F0  0EC6               	movlw	198
   698  0001F2  6E1F               	movwf	wl_module_tx_config@tx_addr,c
   699                           
   700                           ;wl_module.c: 156: wl_module_set_TADDR(tx_addr);
   701  0001F4  0E1F               	movlw	low wl_module_tx_config@tx_addr
   702  0001F6  6E1C               	movwf	wl_module_set_TADDR@adr,c
   703  0001F8  0E00               	movlw	high wl_module_tx_config@tx_addr
   704  0001FA  6E1D               	movwf	wl_module_set_TADDR@adr+1,c
   705  0001FC  EC65  F002         	call	_wl_module_set_TADDR	;wreg free
   706                           
   707                           ;wl_module.c: 157: wl_module_set_RADDR(tx_addr);
   708  000200  0E1F               	movlw	low wl_module_tx_config@tx_addr
   709  000202  6E1C               	movwf	wl_module_set_RADDR@adr,c
   710  000204  0E00               	movlw	high wl_module_tx_config@tx_addr
   711  000206  6E1D               	movwf	wl_module_set_RADDR@adr+1,c
   712  000208  EC35  F002         	call	_wl_module_set_RADDR	;wreg free
   713                           
   714                           ;wl_module.c: 159: }
   715                           
   716                           ;wl_module.c: 158: break;
   717  00020C  D013               	goto	l1810
   718  00020E                     l1808:
   719  00020E  501E               	movf	wl_module_tx_config@tx_nr,w,c
   720                           
   721                           ; Switch size 1, requested type "space"
   722                           ; Number of cases is 6, Range of values is 0 to 5
   723                           ; switch strategies available:
   724                           ; Name         Instructions Cycles
   725                           ; simple_byte           19    10 (average)
   726                           ;	Chosen strategy is simple_byte
   727  000210  0A00               	xorlw	0	; case 0
   728  000212  B4D8               	btfsc	status,2,c
   729  000214  D772               	goto	l1770
   730  000216  0A01               	xorlw	1	; case 1
   731  000218  B4D8               	btfsc	status,2,c
   732  00021A  D786               	goto	l1776
   733  00021C  0A03               	xorlw	3	; case 2
   734  00021E  B4D8               	btfsc	status,2,c
   735  000220  D79A               	goto	l1782
   736  000222  0A01               	xorlw	1	; case 3
   737  000224  B4D8               	btfsc	status,2,c
   738  000226  D7AE               	goto	l1788
   739  000228  0A07               	xorlw	7	; case 4
   740  00022A  B4D8               	btfsc	status,2,c
   741  00022C  D7C2               	goto	l1794
   742  00022E  0A01               	xorlw	1	; case 5
   743  000230  B4D8               	btfsc	status,2,c
   744  000232  D7D6               	goto	l1800
   745  000234                     l1810:
   746                           
   747                           ;wl_module.c: 161: PTX =0;
   748  000234  0E00               	movlw	0
   749  000236  6E33               	movwf	_PTX,c	;volatile
   750                           
   751                           ;wl_module.c: 162: wl_module_config_register(0x00, ( (1<<6) | (1<<3) | (1<<2) ) | ( (1<<
      +                          1) | (0<<0) ) );
   752  000238  0E4E               	movlw	78
   753  00023A  6E14               	movwf	wl_module_config_register@value,c
   754  00023C  0E00               	movlw	0
   755  00023E  EC41  F002         	call	_wl_module_config_register
   756  000242  0012               	return		;funcret
   757  000244                     __end_of_wl_module_tx_config:
   758                           	opt stack 0
   759                           tblptru	equ	0xFF8
   760                           prodh	equ	0xFF4
   761                           prodl	equ	0xFF3
   762                           intcon	equ	0xFF2
   763                           postinc0	equ	0xFEE
   764                           wreg	equ	0xFE8
   765                           indf2	equ	0xFDF
   766                           fsr2h	equ	0xFDA
   767                           fsr2l	equ	0xFD9
   768                           status	equ	0xFD8
   769                           
   770 ;; *************** function _wl_module_set_TADDR *****************
   771 ;; Defined at:
   772 ;;		line 300 in file "wl_module.c"
   773 ;; Parameters:    Size  Location     Type
   774 ;;  adr             2   27[COMRAM] PTR unsigned char 
   775 ;;		 -> wl_module_tx_config@tx_addr(5), 
   776 ;; Auto vars:     Size  Location     Type
   777 ;;		None
   778 ;; Return value:  Size  Location     Type
   779 ;;                  1    wreg      void 
   780 ;; Registers used:
   781 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   782 ;; Tracked objects:
   783 ;;		On entry : 0/0
   784 ;;		On exit  : 0/0
   785 ;;		Unchanged: 0/0
   786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   787 ;;      Params:         2       0       0       0       0       0       0       0       0
   788 ;;      Locals:         0       0       0       0       0       0       0       0       0
   789 ;;      Temps:          0       0       0       0       0       0       0       0       0
   790 ;;      Totals:         2       0       0       0       0       0       0       0       0
   791 ;;Total ram usage:        2 bytes
   792 ;; Hardware stack levels used:    1
   793 ;; Hardware stack levels required when called:    5
   794 ;; This function calls:
   795 ;;		_wl_module_write_register
   796 ;; This function is called by:
   797 ;;		_wl_module_tx_config
   798 ;; This function uses a non-reentrant model
   799 ;;
   800                           
   801                           	psect	text2
   802  0004CA                     __ptext2:
   803                           	opt stack 0
   804  0004CA                     _wl_module_set_TADDR:
   805                           	opt stack 24
   806                           
   807                           ;wl_module.c: 303: wl_module_write_register(0x10, adr,5);
   808                           
   809                           ;incstack = 0
   810  0004CA  C01C  F018         	movff	wl_module_set_TADDR@adr,wl_module_write_register@value
   811  0004CE  C01D  F019         	movff	wl_module_set_TADDR@adr+1,wl_module_write_register@value+1
   812  0004D2  0E05               	movlw	5
   813  0004D4  6E1A               	movwf	wl_module_write_register@len,c
   814  0004D6  0E10               	movlw	16
   815  0004D8  ECF6  F001         	call	_wl_module_write_register
   816  0004DC  0012               	return		;funcret
   817  0004DE                     __end_of_wl_module_set_TADDR:
   818                           	opt stack 0
   819                           tblptru	equ	0xFF8
   820                           prodh	equ	0xFF4
   821                           prodl	equ	0xFF3
   822                           intcon	equ	0xFF2
   823                           postinc0	equ	0xFEE
   824                           wreg	equ	0xFE8
   825                           indf2	equ	0xFDF
   826                           fsr2h	equ	0xFDA
   827                           fsr2l	equ	0xFD9
   828                           status	equ	0xFD8
   829                           
   830 ;; *************** function _wl_module_set_RADDR *****************
   831 ;; Defined at:
   832 ;;		line 292 in file "wl_module.c"
   833 ;; Parameters:    Size  Location     Type
   834 ;;  adr             2   27[COMRAM] PTR unsigned char 
   835 ;;		 -> wl_module_tx_config@tx_addr(5), 
   836 ;; Auto vars:     Size  Location     Type
   837 ;;		None
   838 ;; Return value:  Size  Location     Type
   839 ;;                  1    wreg      void 
   840 ;; Registers used:
   841 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   842 ;; Tracked objects:
   843 ;;		On entry : 0/0
   844 ;;		On exit  : 0/0
   845 ;;		Unchanged: 0/0
   846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   847 ;;      Params:         2       0       0       0       0       0       0       0       0
   848 ;;      Locals:         0       0       0       0       0       0       0       0       0
   849 ;;      Temps:          0       0       0       0       0       0       0       0       0
   850 ;;      Totals:         2       0       0       0       0       0       0       0       0
   851 ;;Total ram usage:        2 bytes
   852 ;; Hardware stack levels used:    1
   853 ;; Hardware stack levels required when called:    5
   854 ;; This function calls:
   855 ;;		_wl_module_write_register
   856 ;; This function is called by:
   857 ;;		_wl_module_tx_config
   858 ;; This function uses a non-reentrant model
   859 ;;
   860                           
   861                           	psect	text3
   862  00046A                     __ptext3:
   863                           	opt stack 0
   864  00046A                     _wl_module_set_RADDR:
   865                           	opt stack 24
   866                           
   867                           ;wl_module.c: 295: LATBbits.LATB3 = 0;;
   868                           
   869                           ;incstack = 0
   870  00046A  968A               	bcf	3978,3,c	;volatile
   871                           
   872                           ;wl_module.c: 296: wl_module_write_register(0x0A,adr,5);
   873  00046C  C01C  F018         	movff	wl_module_set_RADDR@adr,wl_module_write_register@value
   874  000470  C01D  F019         	movff	wl_module_set_RADDR@adr+1,wl_module_write_register@value+1
   875  000474  0E05               	movlw	5
   876  000476  6E1A               	movwf	wl_module_write_register@len,c
   877  000478  0E0A               	movlw	10
   878  00047A  ECF6  F001         	call	_wl_module_write_register
   879                           
   880                           ;wl_module.c: 297: LATBbits.LATB3 = 1;;
   881  00047E  868A               	bsf	3978,3,c	;volatile
   882  000480  0012               	return		;funcret
   883  000482                     __end_of_wl_module_set_RADDR:
   884                           	opt stack 0
   885                           tblptru	equ	0xFF8
   886                           prodh	equ	0xFF4
   887                           prodl	equ	0xFF3
   888                           intcon	equ	0xFF2
   889                           postinc0	equ	0xFEE
   890                           wreg	equ	0xFE8
   891                           indf2	equ	0xFDF
   892                           fsr2h	equ	0xFDA
   893                           fsr2l	equ	0xFD9
   894                           status	equ	0xFD8
   895                           
   896 ;; *************** function _wl_module_write_register *****************
   897 ;; Defined at:
   898 ;;		line 436 in file "wl_module.c"
   899 ;; Parameters:    Size  Location     Type
   900 ;;  reg             1    wreg     unsigned char 
   901 ;;  value           2   23[COMRAM] PTR unsigned char 
   902 ;;		 -> wl_module_set_rx_pw@payloadwidth(1), wl_module_power_down@config(1), wl_module_set_as_tx@config(1), wl_module_tx
      +_config@tx_addr(5), 
   903 ;;		 -> wl_module_rx_config@data(5), 
   904 ;;  len             1   25[COMRAM] unsigned char 
   905 ;; Auto vars:     Size  Location     Type
   906 ;;  reg             1   26[COMRAM] unsigned char 
   907 ;; Return value:  Size  Location     Type
   908 ;;                  1    wreg      void 
   909 ;; Registers used:
   910 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   911 ;; Tracked objects:
   912 ;;		On entry : 0/0
   913 ;;		On exit  : 0/0
   914 ;;		Unchanged: 0/0
   915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   916 ;;      Params:         3       0       0       0       0       0       0       0       0
   917 ;;      Locals:         1       0       0       0       0       0       0       0       0
   918 ;;      Temps:          0       0       0       0       0       0       0       0       0
   919 ;;      Totals:         4       0       0       0       0       0       0       0       0
   920 ;;Total ram usage:        4 bytes
   921 ;; Hardware stack levels used:    1
   922 ;; Hardware stack levels required when called:    4
   923 ;; This function calls:
   924 ;;		_spi_fast_shift
   925 ;;		_spi_transmit_sync
   926 ;; This function is called by:
   927 ;;		_wl_module_set_RADDR
   928 ;;		_wl_module_set_TADDR
   929 ;;		_wl_module_set_tx_addr
   930 ;;		_wl_module_set_as_tx
   931 ;;		_wl_module_power_down
   932 ;;		_wl_module_set_rx_addr
   933 ;;		_wl_module_set_rx_pw
   934 ;; This function uses a non-reentrant model
   935 ;;
   936                           
   937                           	psect	text4
   938  0003EC                     __ptext4:
   939                           	opt stack 0
   940  0003EC                     _wl_module_write_register:
   941                           	opt stack 24
   942                           
   943                           ;incstack = 0
   944                           ;wl_module_write_register@reg stored from wreg
   945  0003EC  6E1B               	movwf	wl_module_write_register@reg,c
   946                           
   947                           ;wl_module.c: 439: LATBbits.LATB4 = 0;;
   948  0003EE  988A               	bcf	3978,4,c	;volatile
   949                           
   950                           ;wl_module.c: 440: spi_fast_shift(0x20 | (0x1F & reg));
   951  0003F0  501B               	movf	wl_module_write_register@reg,w,c
   952  0003F2  0B1F               	andlw	31
   953  0003F4  0920               	iorlw	32
   954  0003F6  EC79  F002         	call	_spi_fast_shift
   955                           
   956                           ;wl_module.c: 441: spi_transmit_sync(value,len);
   957  0003FA  C018  F013         	movff	wl_module_write_register@value,spi_transmit_sync@data
   958  0003FE  C019  F014         	movff	wl_module_write_register@value+1,spi_transmit_sync@data+1
   959  000402  C01A  F015         	movff	wl_module_write_register@len,spi_transmit_sync@length
   960  000406  6A16               	clrf	spi_transmit_sync@length+1,c
   961  000408  ECCD  F001         	call	_spi_transmit_sync	;wreg free
   962                           
   963                           ;wl_module.c: 442: LATBbits.LATB4 = 1;;
   964  00040C  888A               	bsf	3978,4,c	;volatile
   965  00040E  0012               	return		;funcret
   966  000410                     __end_of_wl_module_write_register:
   967                           	opt stack 0
   968                           tblptru	equ	0xFF8
   969                           prodh	equ	0xFF4
   970                           prodl	equ	0xFF3
   971                           intcon	equ	0xFF2
   972                           postinc0	equ	0xFEE
   973                           wreg	equ	0xFE8
   974                           indf2	equ	0xFDF
   975                           fsr2h	equ	0xFDA
   976                           fsr2l	equ	0xFD9
   977                           status	equ	0xFD8
   978                           
   979 ;; *************** function _wl_module_send *****************
   980 ;; Defined at:
   981 ;;		line 446 in file "wl_module.c"
   982 ;; Parameters:    Size  Location     Type
   983 ;;  value           2   23[COMRAM] PTR unsigned char 
   984 ;;		 -> main@hall(32), 
   985 ;;  len             1   25[COMRAM] unsigned char 
   986 ;; Auto vars:     Size  Location     Type
   987 ;;		None
   988 ;; Return value:  Size  Location     Type
   989 ;;                  1    wreg      void 
   990 ;; Registers used:
   991 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   992 ;; Tracked objects:
   993 ;;		On entry : 0/0
   994 ;;		On exit  : 0/0
   995 ;;		Unchanged: 0/0
   996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   997 ;;      Params:         3       0       0       0       0       0       0       0       0
   998 ;;      Locals:         0       0       0       0       0       0       0       0       0
   999 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1000 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1001 ;;Total ram usage:        3 bytes
  1002 ;; Hardware stack levels used:    1
  1003 ;; Hardware stack levels required when called:    5
  1004 ;; This function calls:
  1005 ;;		_spi_fast_shift
  1006 ;;		_spi_transmit_sync
  1007 ;;		_wl_module_config_register
  1008 ;; This function is called by:
  1009 ;;		_main
  1010 ;; This function uses a non-reentrant model
  1011 ;;
  1012                           
  1013                           	psect	text5
  1014  000350                     __ptext5:
  1015                           	opt stack 0
  1016  000350                     _wl_module_send:
  1017                           	opt stack 25
  1018  000350                     l1816:
  1019  000350  5033               	movf	_PTX,w,c	;volatile
  1020  000352  A4D8               	btfss	status,2,c
  1021  000354  D7FD               	goto	l1816
  1022                           
  1023                           ;wl_module.c: 452: LATBbits.LATB3 = 0;;
  1024  000356  968A               	bcf	3978,3,c	;volatile
  1025                           
  1026                           ;wl_module.c: 454: PTX = 1;
  1027  000358  0E01               	movlw	1
  1028  00035A  6E33               	movwf	_PTX,c	;volatile
  1029                           
  1030                           ;wl_module.c: 455: wl_module_config_register(0x00, ( (1<<6) | (1<<3) | (1<<2) ) | ( (1<<
      +                          1) | (0<<0) ) );
  1031  00035C  0E4E               	movlw	78
  1032  00035E  6E14               	movwf	wl_module_config_register@value,c
  1033  000360  0E00               	movlw	0
  1034  000362  EC41  F002         	call	_wl_module_config_register
  1035                           
  1036                           ;wl_module.c: 457: LATBbits.LATB4 = 0;;
  1037  000366  988A               	bcf	3978,4,c	;volatile
  1038                           
  1039                           ;wl_module.c: 458: spi_fast_shift( 0xE1 );
  1040  000368  0EE1               	movlw	225
  1041  00036A  EC79  F002         	call	_spi_fast_shift
  1042                           
  1043                           ;wl_module.c: 459: LATBbits.LATB4 = 1;;
  1044  00036E  888A               	bsf	3978,4,c	;volatile
  1045                           
  1046                           ;wl_module.c: 461: LATBbits.LATB4 = 0;;
  1047  000370  988A               	bcf	3978,4,c	;volatile
  1048                           
  1049                           ;wl_module.c: 462: spi_fast_shift( 0xA0 );
  1050  000372  0EA0               	movlw	160
  1051  000374  EC79  F002         	call	_spi_fast_shift
  1052                           
  1053                           ;wl_module.c: 463: spi_transmit_sync(value,len);
  1054  000378  C018  F013         	movff	wl_module_send@value,spi_transmit_sync@data
  1055  00037C  C019  F014         	movff	wl_module_send@value+1,spi_transmit_sync@data+1
  1056  000380  C01A  F015         	movff	wl_module_send@len,spi_transmit_sync@length
  1057  000384  6A16               	clrf	spi_transmit_sync@length+1,c
  1058  000386  ECCD  F001         	call	_spi_transmit_sync	;wreg free
  1059                           
  1060                           ;wl_module.c: 464: LATBbits.LATB4 = 1;;
  1061  00038A  888A               	bsf	3978,4,c	;volatile
  1062                           
  1063                           ;wl_module.c: 466: LATBbits.LATB3 = 1;;
  1064  00038C  868A               	bsf	3978,3,c	;volatile
  1065                           
  1066                           ;wl_module.c: 467: _delay((unsigned long)((10)*(16000000/4000000.0)));
  1067  00038E  0E0D               	movlw	13
  1068  000390                     u717:
  1069  000390  2EE8               	decfsz	wreg,f,c
  1070  000392  D7FE               	bra	u717
  1071  000394  F000               	nop	
  1072                           
  1073                           ;wl_module.c: 468: LATBbits.LATB3 = 0;;
  1074  000396  968A               	bcf	3978,3,c	;volatile
  1075  000398  0012               	return		;funcret
  1076  00039A                     __end_of_wl_module_send:
  1077                           	opt stack 0
  1078                           tblptru	equ	0xFF8
  1079                           prodh	equ	0xFF4
  1080                           prodl	equ	0xFF3
  1081                           intcon	equ	0xFF2
  1082                           postinc0	equ	0xFEE
  1083                           wreg	equ	0xFE8
  1084                           indf2	equ	0xFDF
  1085                           fsr2h	equ	0xFDA
  1086                           fsr2l	equ	0xFD9
  1087                           status	equ	0xFD8
  1088                           
  1089 ;; *************** function _wl_module_config_register *****************
  1090 ;; Defined at:
  1091 ;;		line 418 in file "wl_module.c"
  1092 ;; Parameters:    Size  Location     Type
  1093 ;;  reg             1    wreg     unsigned char 
  1094 ;;  value           1   19[COMRAM] unsigned char 
  1095 ;; Auto vars:     Size  Location     Type
  1096 ;;  reg             1   20[COMRAM] unsigned char 
  1097 ;; Return value:  Size  Location     Type
  1098 ;;                  1    wreg      void 
  1099 ;; Registers used:
  1100 ;;		wreg, status,2, status,0, cstack
  1101 ;; Tracked objects:
  1102 ;;		On entry : 0/0
  1103 ;;		On exit  : 0/0
  1104 ;;		Unchanged: 0/0
  1105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1106 ;;      Params:         1       0       0       0       0       0       0       0       0
  1107 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1108 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1109 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1110 ;;Total ram usage:        2 bytes
  1111 ;; Hardware stack levels used:    1
  1112 ;; Hardware stack levels required when called:    4
  1113 ;; This function calls:
  1114 ;;		_spi_fast_shift
  1115 ;; This function is called by:
  1116 ;;		_wl_module_tx_config
  1117 ;;		_wl_module_send
  1118 ;;		_wl_module_config
  1119 ;;		_wl_module_rx_config
  1120 ;;		_wl_module_get_data
  1121 ;; This function uses a non-reentrant model
  1122 ;;
  1123                           
  1124                           	psect	text6
  1125  000482                     __ptext6:
  1126                           	opt stack 0
  1127  000482                     _wl_module_config_register:
  1128                           	opt stack 25
  1129                           
  1130                           ;incstack = 0
  1131                           ;wl_module_config_register@reg stored from wreg
  1132  000482  6E15               	movwf	wl_module_config_register@reg,c
  1133                           
  1134                           ;wl_module.c: 421: LATBbits.LATB4 = 0;;
  1135  000484  988A               	bcf	3978,4,c	;volatile
  1136                           
  1137                           ;wl_module.c: 422: spi_fast_shift(0x20 | (0x1F & reg));
  1138  000486  5015               	movf	wl_module_config_register@reg,w,c
  1139  000488  0B1F               	andlw	31
  1140  00048A  0920               	iorlw	32
  1141  00048C  EC79  F002         	call	_spi_fast_shift
  1142                           
  1143                           ;wl_module.c: 423: spi_fast_shift(value);
  1144  000490  5014               	movf	wl_module_config_register@value,w,c
  1145  000492  EC79  F002         	call	_spi_fast_shift
  1146                           
  1147                           ;wl_module.c: 424: LATBbits.LATB4 = 1;;
  1148  000496  888A               	bsf	3978,4,c	;volatile
  1149  000498  0012               	return		;funcret
  1150  00049A                     __end_of_wl_module_config_register:
  1151                           	opt stack 0
  1152                           tblptru	equ	0xFF8
  1153                           prodh	equ	0xFF4
  1154                           prodl	equ	0xFF3
  1155                           intcon	equ	0xFF2
  1156                           postinc0	equ	0xFEE
  1157                           wreg	equ	0xFE8
  1158                           indf2	equ	0xFDF
  1159                           fsr2h	equ	0xFDA
  1160                           fsr2l	equ	0xFD9
  1161                           status	equ	0xFD8
  1162                           
  1163 ;; *************** function _spi_fast_shift *****************
  1164 ;; Defined at:
  1165 ;;		line 62 in file "spi.c"
  1166 ;; Parameters:    Size  Location     Type
  1167 ;;  data            1    wreg     unsigned char 
  1168 ;; Auto vars:     Size  Location     Type
  1169 ;;  data            1   18[COMRAM] unsigned char 
  1170 ;; Return value:  Size  Location     Type
  1171 ;;                  1    wreg      unsigned char 
  1172 ;; Registers used:
  1173 ;;		wreg, status,2
  1174 ;; Tracked objects:
  1175 ;;		On entry : 0/0
  1176 ;;		On exit  : 0/0
  1177 ;;		Unchanged: 0/0
  1178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1179 ;;      Params:         0       0       0       0       0       0       0       0       0
  1180 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1181 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1182 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1183 ;;Total ram usage:        1 bytes
  1184 ;; Hardware stack levels used:    1
  1185 ;; Hardware stack levels required when called:    3
  1186 ;; This function calls:
  1187 ;;		Nothing
  1188 ;; This function is called by:
  1189 ;;		_wl_module_config_register
  1190 ;;		_wl_module_write_register
  1191 ;;		_wl_module_send
  1192 ;;		_wl_module_data_ready
  1193 ;;		_wl_module_get_one_byte
  1194 ;;		_wl_module_get_data
  1195 ;;		_wl_module_read_register
  1196 ;; This function uses a non-reentrant model
  1197 ;;
  1198                           
  1199                           	psect	text7
  1200  0004F2                     __ptext7:
  1201                           	opt stack 0
  1202  0004F2                     _spi_fast_shift:
  1203                           	opt stack 24
  1204                           
  1205                           ;incstack = 0
  1206                           ;spi_fast_shift@data stored from wreg
  1207  0004F2  6E13               	movwf	spi_fast_shift@data,c
  1208                           
  1209                           ;spi.c: 63: SSP1BUF = data;
  1210  0004F4  C013  FFC9         	movff	spi_fast_shift@data,4041	;volatile
  1211  0004F8                     l190:
  1212  0004F8  A69E               	btfss	3998,3,c	;volatile
  1213  0004FA  D7FE               	goto	l190
  1214                           
  1215                           ;spi.c: 65: PIR1bits.SSP1IF = 0;
  1216  0004FC  969E               	bcf	3998,3,c	;volatile
  1217                           
  1218                           ;spi.c: 66: return SSP1BUF;
  1219  0004FE  50C9               	movf	4041,w,c	;volatile
  1220  000500  0012               	return		;funcret
  1221  000502                     __end_of_spi_fast_shift:
  1222                           	opt stack 0
  1223                           tblptru	equ	0xFF8
  1224                           prodh	equ	0xFF4
  1225                           prodl	equ	0xFF3
  1226                           intcon	equ	0xFF2
  1227                           postinc0	equ	0xFEE
  1228                           wreg	equ	0xFE8
  1229                           indf2	equ	0xFDF
  1230                           fsr2h	equ	0xFDA
  1231                           fsr2l	equ	0xFD9
  1232                           status	equ	0xFD8
  1233                           
  1234 ;; *************** function _spi_transmit_sync *****************
  1235 ;; Defined at:
  1236 ;;		line 38 in file "spi.c"
  1237 ;; Parameters:    Size  Location     Type
  1238 ;;  data            2   18[COMRAM] PTR unsigned char 
  1239 ;;		 -> main@hall(32), wl_module_set_rx_pw@payloadwidth(1), wl_module_power_down@config(1), wl_module_set_as_tx@config(1
      +), 
  1240 ;;		 -> wl_module_tx_config@tx_addr(5), wl_module_rx_config@data(5), 
  1241 ;;  length          2   20[COMRAM] unsigned int 
  1242 ;; Auto vars:     Size  Location     Type
  1243 ;;  tmp             1   22[COMRAM] unsigned char 
  1244 ;; Return value:  Size  Location     Type
  1245 ;;                  1    wreg      void 
  1246 ;; Registers used:
  1247 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1248 ;; Tracked objects:
  1249 ;;		On entry : 0/0
  1250 ;;		On exit  : 0/0
  1251 ;;		Unchanged: 0/0
  1252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1253 ;;      Params:         4       0       0       0       0       0       0       0       0
  1254 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1255 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1256 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1257 ;;Total ram usage:        5 bytes
  1258 ;; Hardware stack levels used:    1
  1259 ;; Hardware stack levels required when called:    3
  1260 ;; This function calls:
  1261 ;;		Nothing
  1262 ;; This function is called by:
  1263 ;;		_wl_module_write_register
  1264 ;;		_wl_module_send
  1265 ;; This function uses a non-reentrant model
  1266 ;;
  1267                           
  1268                           	psect	text8
  1269  00039A                     __ptext8:
  1270                           	opt stack 0
  1271  00039A                     _spi_transmit_sync:
  1272                           	opt stack 24
  1273                           
  1274                           ;spi.c: 39: unsigned char tmp;
  1275                           ;spi.c: 40: while(length){
  1276                           
  1277                           ;incstack = 0
  1278  00039A  D010               	goto	l1736
  1279  00039C                     l1732:
  1280                           
  1281                           ;spi.c: 41: SSP1BUF = *data;
  1282  00039C  C013  FFD9         	movff	spi_transmit_sync@data,fsr2l
  1283  0003A0  C014  FFDA         	movff	spi_transmit_sync@data+1,fsr2h
  1284  0003A4  50DF               	movf	indf2,w,c
  1285  0003A6  6EC9               	movwf	4041,c	;volatile
  1286  0003A8                     l174:
  1287  0003A8  A69E               	btfss	3998,3,c	;volatile
  1288  0003AA  D7FE               	goto	l174
  1289                           
  1290                           ;spi.c: 43: PIR1bits.SSP1IF = 0;
  1291  0003AC  969E               	bcf	3998,3,c	;volatile
  1292                           
  1293                           ;spi.c: 44: tmp = SSP1BUF;
  1294  0003AE  CFC9 F017          	movff	4041,spi_transmit_sync@tmp	;volatile
  1295                           
  1296                           ;spi.c: 45: length--;
  1297  0003B2  0615               	decf	spi_transmit_sync@length,f,c
  1298  0003B4  A0D8               	btfss	status,0,c
  1299  0003B6  0616               	decf	spi_transmit_sync@length+1,f,c
  1300                           
  1301                           ;spi.c: 46: data++;
  1302  0003B8  4A13               	infsnz	spi_transmit_sync@data,f,c
  1303  0003BA  2A14               	incf	spi_transmit_sync@data+1,f,c
  1304  0003BC                     l1736:
  1305  0003BC  5015               	movf	spi_transmit_sync@length,w,c
  1306  0003BE  1016               	iorwf	spi_transmit_sync@length+1,w,c
  1307  0003C0  B4D8               	btfsc	status,2,c
  1308  0003C2  0012               	return	
  1309  0003C4  D7EB               	goto	l1732
  1310  0003C6                     __end_of_spi_transmit_sync:
  1311                           	opt stack 0
  1312                           tblptru	equ	0xFF8
  1313                           prodh	equ	0xFF4
  1314                           prodl	equ	0xFF3
  1315                           intcon	equ	0xFF2
  1316                           postinc0	equ	0xFEE
  1317                           wreg	equ	0xFE8
  1318                           indf2	equ	0xFDF
  1319                           fsr2h	equ	0xFDA
  1320                           fsr2l	equ	0xFD9
  1321                           status	equ	0xFD8
  1322                           
  1323 ;; *************** function _wl_module_init *****************
  1324 ;; Defined at:
  1325 ;;		line 24 in file "wl_module.c"
  1326 ;; Parameters:    Size  Location     Type
  1327 ;;		None
  1328 ;; Auto vars:     Size  Location     Type
  1329 ;;		None
  1330 ;; Return value:  Size  Location     Type
  1331 ;;                  1    wreg      void 
  1332 ;; Registers used:
  1333 ;;		cstack
  1334 ;; Tracked objects:
  1335 ;;		On entry : 0/0
  1336 ;;		On exit  : 0/0
  1337 ;;		Unchanged: 0/0
  1338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1339 ;;      Params:         0       0       0       0       0       0       0       0       0
  1340 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1341 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1342 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1343 ;;Total ram usage:        0 bytes
  1344 ;; Hardware stack levels used:    1
  1345 ;; Hardware stack levels required when called:    4
  1346 ;; This function calls:
  1347 ;;		_spi_init
  1348 ;; This function is called by:
  1349 ;;		_main
  1350 ;; This function uses a non-reentrant model
  1351 ;;
  1352                           
  1353                           	psect	text9
  1354  00049A                     __ptext9:
  1355                           	opt stack 0
  1356  00049A                     _wl_module_init:
  1357                           	opt stack 26
  1358                           
  1359                           ;wl_module.c: 29: TRISBbits.TRISB4 = 0;
  1360                           
  1361                           ;incstack = 0
  1362  00049A  9893               	bcf	3987,4,c	;volatile
  1363                           
  1364                           ;wl_module.c: 30: TRISBbits.TRISB3 = 0;
  1365  00049C  9693               	bcf	3987,3,c	;volatile
  1366                           
  1367                           ;wl_module.c: 31: LATBbits.LATB3 = 0;;
  1368  00049E  968A               	bcf	3978,3,c	;volatile
  1369                           
  1370                           ;wl_module.c: 32: LATBbits.LATB4 = 1;;
  1371  0004A0  888A               	bsf	3978,4,c	;volatile
  1372                           
  1373                           ;wl_module.c: 35: ANSELBbits.ANSB2 = 0;
  1374  0004A2  010F               	movlb	15	; () banked
  1375  0004A4  955C               	bcf	92,2,b	;volatile
  1376                           
  1377                           ;wl_module.c: 36: TRISBbits.TRISB2 = 1;
  1378  0004A6  8493               	bsf	3987,2,c	;volatile
  1379                           
  1380                           ;wl_module.c: 37: INTCON2bits.INTEDG2 = 0;
  1381  0004A8  98F1               	bcf	intcon2,4,c	;volatile
  1382                           
  1383                           ;wl_module.c: 38: INTCON3bits.INT2IE = 1;
  1384  0004AA  88F0               	bsf	intcon3,4,c	;volatile
  1385                           
  1386                           ; BSR set to: 15
  1387                           ;wl_module.c: 41: spi_init();
  1388  0004AC  EC08  F002         	call	_spi_init	;wreg free
  1389  0004B0  0012               	return		;funcret
  1390  0004B2                     __end_of_wl_module_init:
  1391                           	opt stack 0
  1392                           tblptru	equ	0xFF8
  1393                           prodh	equ	0xFF4
  1394                           prodl	equ	0xFF3
  1395                           intcon	equ	0xFF2
  1396                           intcon2	equ	0xFF1
  1397                           intcon3	equ	0xFF0
  1398                           postinc0	equ	0xFEE
  1399                           wreg	equ	0xFE8
  1400                           indf2	equ	0xFDF
  1401                           fsr2h	equ	0xFDA
  1402                           fsr2l	equ	0xFD9
  1403                           status	equ	0xFD8
  1404                           
  1405 ;; *************** function _spi_init *****************
  1406 ;; Defined at:
  1407 ;;		line 12 in file "spi.c"
  1408 ;; Parameters:    Size  Location     Type
  1409 ;;		None
  1410 ;; Auto vars:     Size  Location     Type
  1411 ;;		None
  1412 ;; Return value:  Size  Location     Type
  1413 ;;                  1    wreg      void 
  1414 ;; Registers used:
  1415 ;;		None
  1416 ;; Tracked objects:
  1417 ;;		On entry : 0/0
  1418 ;;		On exit  : 0/0
  1419 ;;		Unchanged: 0/0
  1420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1421 ;;      Params:         0       0       0       0       0       0       0       0       0
  1422 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1423 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1424 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1425 ;;Total ram usage:        0 bytes
  1426 ;; Hardware stack levels used:    1
  1427 ;; Hardware stack levels required when called:    3
  1428 ;; This function calls:
  1429 ;;		Nothing
  1430 ;; This function is called by:
  1431 ;;		_wl_module_init
  1432 ;; This function uses a non-reentrant model
  1433 ;;
  1434                           
  1435                           	psect	text10
  1436  000410                     __ptext10:
  1437                           	opt stack 0
  1438  000410                     _spi_init:
  1439                           	opt stack 26
  1440                           
  1441                           ;spi.c: 14: SSP1CON1bits.SSPEN = 0;
  1442                           
  1443                           ;incstack = 0
  1444  000410  9AC6               	bcf	4038,5,c	;volatile
  1445                           
  1446                           ;spi.c: 16: TRISBbits.TRISB0 = 1;
  1447  000412  8093               	bsf	3987,0,c	;volatile
  1448                           
  1449                           ;spi.c: 19: ANSELBbits.ANSB0 =0;
  1450  000414  010F               	movlb	15	; () banked
  1451  000416  915C               	bcf	92,0,b	;volatile
  1452                           
  1453                           ;spi.c: 21: TRISAbits.TRISA5 = 1;
  1454  000418  8A92               	bsf	3986,5,c	;volatile
  1455                           
  1456                           ;spi.c: 25: TRISCbits.TRISC7 = 0;
  1457  00041A  9E94               	bcf	3988,7,c	;volatile
  1458                           
  1459                           ;spi.c: 27: TRISCbits.TRISC6 = 0;
  1460  00041C  9C94               	bcf	3988,6,c	;volatile
  1461                           
  1462                           ;spi.c: 31: SSP1CON1bits.CKP = 0;
  1463  00041E  98C6               	bcf	4038,4,c	;volatile
  1464                           
  1465                           ;spi.c: 32: SSP1STATbits.CKE = 1;
  1466  000420  8CC7               	bsf	4039,6,c	;volatile
  1467                           
  1468                           ;spi.c: 33: SSP1STATbits.SMP = 1;
  1469  000422  8EC7               	bsf	4039,7,c	;volatile
  1470                           
  1471                           ;spi.c: 34: SSP1CON1bits.SSPM = 0;
  1472  000424  90C6               	bcf	4038,0,c	;volatile
  1473  000426  92C6               	bcf	4038,1,c	;volatile
  1474  000428  94C6               	bcf	4038,2,c	;volatile
  1475  00042A  96C6               	bcf	4038,3,c	;volatile
  1476                           
  1477                           ;spi.c: 35: SSP1CON1bits.SSPEN = 1;
  1478  00042C  8AC6               	bsf	4038,5,c	;volatile
  1479                           
  1480                           ; BSR set to: 15
  1481  00042E  0012               	return		;funcret
  1482  000430                     __end_of_spi_init:
  1483                           	opt stack 0
  1484                           tblptru	equ	0xFF8
  1485                           prodh	equ	0xFF4
  1486                           prodl	equ	0xFF3
  1487                           intcon	equ	0xFF2
  1488                           intcon2	equ	0xFF1
  1489                           intcon3	equ	0xFF0
  1490                           postinc0	equ	0xFEE
  1491                           wreg	equ	0xFE8
  1492                           indf2	equ	0xFDF
  1493                           fsr2h	equ	0xFDA
  1494                           fsr2l	equ	0xFD9
  1495                           status	equ	0xFD8
  1496                           
  1497 ;; *************** function __delay_10ms *****************
  1498 ;; Defined at:
  1499 ;;		line 33 in file "main.c"
  1500 ;; Parameters:    Size  Location     Type
  1501 ;;  length          2   18[COMRAM] int 
  1502 ;; Auto vars:     Size  Location     Type
  1503 ;;		None
  1504 ;; Return value:  Size  Location     Type
  1505 ;;                  1    wreg      void 
  1506 ;; Registers used:
  1507 ;;		wreg, status,2, status,0
  1508 ;; Tracked objects:
  1509 ;;		On entry : 0/0
  1510 ;;		On exit  : 0/0
  1511 ;;		Unchanged: 0/0
  1512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1513 ;;      Params:         2       0       0       0       0       0       0       0       0
  1514 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1515 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1516 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1517 ;;Total ram usage:        3 bytes
  1518 ;; Hardware stack levels used:    1
  1519 ;; Hardware stack levels required when called:    3
  1520 ;; This function calls:
  1521 ;;		Nothing
  1522 ;; This function is called by:
  1523 ;;		_main
  1524 ;; This function uses a non-reentrant model
  1525 ;;
  1526                           
  1527                           	psect	text11
  1528  000430                     __ptext11:
  1529                           	opt stack 0
  1530  000430                     __delay_10ms:
  1531                           	opt stack 27
  1532                           
  1533                           ;main.c: 34: while(length){
  1534                           
  1535                           ; BSR set to: 15
  1536                           ;incstack = 0
  1537  000430  D00A               	goto	l224
  1538  000432                     l1844:
  1539                           
  1540                           ;main.c: 35: _delay((unsigned long)((10)*(16000000UL/4000.0)));
  1541  000432  0E34               	movlw	52
  1542  000434  6E15               	movwf	??__delay_10ms& (0+255),c
  1543  000436  0EF2               	movlw	242
  1544  000438                     u727:
  1545  000438  2EE8               	decfsz	wreg,f,c
  1546  00043A  D7FE               	bra	u727
  1547  00043C  2E15               	decfsz	??__delay_10ms& (0+255),f,c
  1548  00043E  D7FC               	bra	u727
  1549                           
  1550                           ;main.c: 36: length--;
  1551  000440  0613               	decf	__delay_10ms@length,f,c
  1552  000442  A0D8               	btfss	status,0,c
  1553  000444  0614               	decf	__delay_10ms@length+1,f,c
  1554  000446                     l224:
  1555  000446  5013               	movf	__delay_10ms@length,w,c
  1556  000448  1014               	iorwf	__delay_10ms@length+1,w,c
  1557  00044A  B4D8               	btfsc	status,2,c
  1558  00044C  0012               	return	
  1559  00044E  D7F1               	goto	l1844
  1560  000450                     __end_of__delay_10ms:
  1561                           	opt stack 0
  1562                           tblptru	equ	0xFF8
  1563                           prodh	equ	0xFF4
  1564                           prodl	equ	0xFF3
  1565                           intcon	equ	0xFF2
  1566                           intcon2	equ	0xFF1
  1567                           intcon3	equ	0xFF0
  1568                           postinc0	equ	0xFEE
  1569                           wreg	equ	0xFE8
  1570                           indf2	equ	0xFDF
  1571                           fsr2h	equ	0xFDA
  1572                           fsr2l	equ	0xFD9
  1573                           status	equ	0xFD8
  1574                           
  1575 ;; *************** function ___wmul *****************
  1576 ;; Defined at:
  1577 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\Umul16.c"
  1578 ;; Parameters:    Size  Location     Type
  1579 ;;  multiplier      2   18[COMRAM] unsigned int 
  1580 ;;  multiplicand    2   20[COMRAM] unsigned int 
  1581 ;; Auto vars:     Size  Location     Type
  1582 ;;  product         2   22[COMRAM] unsigned int 
  1583 ;; Return value:  Size  Location     Type
  1584 ;;                  2   18[COMRAM] unsigned int 
  1585 ;; Registers used:
  1586 ;;		wreg, status,2, status,0, prodl, prodh
  1587 ;; Tracked objects:
  1588 ;;		On entry : 0/0
  1589 ;;		On exit  : 0/0
  1590 ;;		Unchanged: 0/0
  1591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1592 ;;      Params:         4       0       0       0       0       0       0       0       0
  1593 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1594 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1595 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1596 ;;Total ram usage:        6 bytes
  1597 ;; Hardware stack levels used:    1
  1598 ;; Hardware stack levels required when called:    3
  1599 ;; This function calls:
  1600 ;;		Nothing
  1601 ;; This function is called by:
  1602 ;;		_main
  1603 ;; This function uses a non-reentrant model
  1604 ;;
  1605                           
  1606                           	psect	text12
  1607  0003C6                     __ptext12:
  1608                           	opt stack 0
  1609  0003C6                     ___wmul:
  1610                           	opt stack 27
  1611                           
  1612                           ;incstack = 0
  1613  0003C6  5013               	movf	___wmul@multiplier,w,c
  1614  0003C8  0215               	mulwf	___wmul@multiplicand,c
  1615  0003CA  CFF3 F017          	movff	prodl,___wmul@product
  1616  0003CE  CFF4 F018          	movff	prodh,___wmul@product+1
  1617  0003D2  5013               	movf	___wmul@multiplier,w,c
  1618  0003D4  0216               	mulwf	___wmul@multiplicand+1,c
  1619  0003D6  50F3               	movf	prodl,w,c
  1620  0003D8  2618               	addwf	___wmul@product+1,f,c
  1621  0003DA  5014               	movf	___wmul@multiplier+1,w,c
  1622  0003DC  0215               	mulwf	___wmul@multiplicand,c
  1623  0003DE  50F3               	movf	prodl,w,c
  1624  0003E0  2618               	addwf	___wmul@product+1,f,c
  1625  0003E2  C017  F013         	movff	___wmul@product,?___wmul
  1626  0003E6  C018  F014         	movff	___wmul@product+1,?___wmul+1
  1627  0003EA  0012               	return	
  1628  0003EC                     __end_of___wmul:
  1629                           	opt stack 0
  1630                           tblptru	equ	0xFF8
  1631                           prodh	equ	0xFF4
  1632                           prodl	equ	0xFF3
  1633                           intcon	equ	0xFF2
  1634                           intcon2	equ	0xFF1
  1635                           intcon3	equ	0xFF0
  1636                           postinc0	equ	0xFEE
  1637                           wreg	equ	0xFE8
  1638                           indf2	equ	0xFDF
  1639                           fsr2h	equ	0xFDA
  1640                           fsr2l	equ	0xFD9
  1641                           status	equ	0xFD8
  1642                           
  1643 ;; *************** function ___lwdiv *****************
  1644 ;; Defined at:
  1645 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwdiv.c"
  1646 ;; Parameters:    Size  Location     Type
  1647 ;;  dividend        2   24[COMRAM] unsigned int 
  1648 ;;  divisor         2   26[COMRAM] unsigned int 
  1649 ;; Auto vars:     Size  Location     Type
  1650 ;;  quotient        2   29[COMRAM] unsigned int 
  1651 ;;  counter         1   28[COMRAM] unsigned char 
  1652 ;; Return value:  Size  Location     Type
  1653 ;;                  2   24[COMRAM] unsigned int 
  1654 ;; Registers used:
  1655 ;;		wreg, status,2, status,0
  1656 ;; Tracked objects:
  1657 ;;		On entry : 0/0
  1658 ;;		On exit  : 0/0
  1659 ;;		Unchanged: 0/0
  1660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1661 ;;      Params:         4       0       0       0       0       0       0       0       0
  1662 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1663 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1664 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1665 ;;Total ram usage:        7 bytes
  1666 ;; Hardware stack levels used:    1
  1667 ;; Hardware stack levels required when called:    3
  1668 ;; This function calls:
  1669 ;;		Nothing
  1670 ;; This function is called by:
  1671 ;;		_main
  1672 ;; This function uses a non-reentrant model
  1673 ;;
  1674                           
  1675                           	psect	text13
  1676  0002FE                     __ptext13:
  1677                           	opt stack 0
  1678  0002FE                     ___lwdiv:
  1679                           	opt stack 27
  1680                           
  1681                           ;incstack = 0
  1682  0002FE  0E00               	movlw	0
  1683  000300  6E1F               	movwf	___lwdiv@quotient+1,c
  1684  000302  0E00               	movlw	0
  1685  000304  6E1E               	movwf	___lwdiv@quotient,c
  1686  000306  501B               	movf	___lwdiv@divisor,w,c
  1687  000308  101C               	iorwf	___lwdiv@divisor+1,w,c
  1688  00030A  B4D8               	btfsc	status,2,c
  1689  00030C  D01C               	goto	l741
  1690  00030E  0E01               	movlw	1
  1691  000310  6E1D               	movwf	___lwdiv@counter,c
  1692  000312  D004               	goto	l1872
  1693  000314                     l1870:
  1694  000314  90D8               	bcf	status,0,c
  1695  000316  361B               	rlcf	___lwdiv@divisor,f,c
  1696  000318  361C               	rlcf	___lwdiv@divisor+1,f,c
  1697  00031A  2A1D               	incf	___lwdiv@counter,f,c
  1698  00031C                     l1872:
  1699  00031C  AE1C               	btfss	___lwdiv@divisor+1,7,c
  1700  00031E  D7FA               	goto	l1870
  1701  000320                     l1874:
  1702  000320  90D8               	bcf	status,0,c
  1703  000322  361E               	rlcf	___lwdiv@quotient,f,c
  1704  000324  361F               	rlcf	___lwdiv@quotient+1,f,c
  1705  000326  501B               	movf	___lwdiv@divisor,w,c
  1706  000328  5C19               	subwf	___lwdiv@dividend,w,c
  1707  00032A  501C               	movf	___lwdiv@divisor+1,w,c
  1708  00032C  581A               	subwfb	___lwdiv@dividend+1,w,c
  1709  00032E  A0D8               	btfss	status,0,c
  1710  000330  D005               	goto	l1882
  1711  000332  501B               	movf	___lwdiv@divisor,w,c
  1712  000334  5E19               	subwf	___lwdiv@dividend,f,c
  1713  000336  501C               	movf	___lwdiv@divisor+1,w,c
  1714  000338  5A1A               	subwfb	___lwdiv@dividend+1,f,c
  1715  00033A  801E               	bsf	___lwdiv@quotient,0,c
  1716  00033C                     l1882:
  1717  00033C  90D8               	bcf	status,0,c
  1718  00033E  321C               	rrcf	___lwdiv@divisor+1,f,c
  1719  000340  321B               	rrcf	___lwdiv@divisor,f,c
  1720  000342  2E1D               	decfsz	___lwdiv@counter,f,c
  1721  000344  D7ED               	goto	l1874
  1722  000346                     l741:
  1723  000346  C01E  F019         	movff	___lwdiv@quotient,?___lwdiv
  1724  00034A  C01F  F01A         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1725  00034E  0012               	return		;funcret
  1726  000350                     __end_of___lwdiv:
  1727                           	opt stack 0
  1728                           tblptru	equ	0xFF8
  1729                           prodh	equ	0xFF4
  1730                           prodl	equ	0xFF3
  1731                           intcon	equ	0xFF2
  1732                           intcon2	equ	0xFF1
  1733                           intcon3	equ	0xFF0
  1734                           postinc0	equ	0xFEE
  1735                           wreg	equ	0xFE8
  1736                           indf2	equ	0xFDF
  1737                           fsr2h	equ	0xFDA
  1738                           fsr2l	equ	0xFD9
  1739                           status	equ	0xFD8
  1740                           
  1741 ;; *************** function _ADC_StartConversion *****************
  1742 ;; Defined at:
  1743 ;;		line 87 in file "mcc_generated_files/adc.c"
  1744 ;; Parameters:    Size  Location     Type
  1745 ;;		None
  1746 ;; Auto vars:     Size  Location     Type
  1747 ;;		None
  1748 ;; Return value:  Size  Location     Type
  1749 ;;                  1    wreg      void 
  1750 ;; Registers used:
  1751 ;;		None
  1752 ;; Tracked objects:
  1753 ;;		On entry : 0/0
  1754 ;;		On exit  : 0/0
  1755 ;;		Unchanged: 0/0
  1756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1757 ;;      Params:         2       0       0       0       0       0       0       0       0
  1758 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1759 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1760 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1761 ;;Total ram usage:        2 bytes
  1762 ;; Hardware stack levels used:    1
  1763 ;; Hardware stack levels required when called:    3
  1764 ;; This function calls:
  1765 ;;		Nothing
  1766 ;; This function is called by:
  1767 ;;		_main
  1768 ;; This function uses a non-reentrant model
  1769 ;;
  1770                           
  1771                           	psect	text14
  1772  00051E                     __ptext14:
  1773                           	opt stack 0
  1774  00051E                     _ADC_StartConversion:
  1775                           	opt stack 27
  1776                           
  1777                           ;adc.c: 90: ADCON0bits.GO_nDONE = 1;
  1778                           
  1779                           ;incstack = 0
  1780  00051E  82C2               	bsf	4034,1,c	;volatile
  1781  000520  0012               	return		;funcret
  1782  000522                     __end_of_ADC_StartConversion:
  1783                           	opt stack 0
  1784                           tblptru	equ	0xFF8
  1785                           prodh	equ	0xFF4
  1786                           prodl	equ	0xFF3
  1787                           intcon	equ	0xFF2
  1788                           intcon2	equ	0xFF1
  1789                           intcon3	equ	0xFF0
  1790                           postinc0	equ	0xFEE
  1791                           wreg	equ	0xFE8
  1792                           indf2	equ	0xFDF
  1793                           fsr2h	equ	0xFDA
  1794                           fsr2l	equ	0xFD9
  1795                           status	equ	0xFD8
  1796                           
  1797 ;; *************** function _ADC_IsConversionDone *****************
  1798 ;; Defined at:
  1799 ;;		line 94 in file "mcc_generated_files/adc.c"
  1800 ;; Parameters:    Size  Location     Type
  1801 ;;		None
  1802 ;; Auto vars:     Size  Location     Type
  1803 ;;		None
  1804 ;; Return value:  Size  Location     Type
  1805 ;;                  1    wreg      unsigned char 
  1806 ;; Registers used:
  1807 ;;		wreg
  1808 ;; Tracked objects:
  1809 ;;		On entry : 0/0
  1810 ;;		On exit  : 0/0
  1811 ;;		Unchanged: 0/0
  1812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1813 ;;      Params:         0       0       0       0       0       0       0       0       0
  1814 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1815 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1816 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1817 ;;Total ram usage:        0 bytes
  1818 ;; Hardware stack levels used:    1
  1819 ;; Hardware stack levels required when called:    3
  1820 ;; This function calls:
  1821 ;;		Nothing
  1822 ;; This function is called by:
  1823 ;;		_main
  1824 ;; This function uses a non-reentrant model
  1825 ;;
  1826                           
  1827                           	psect	text15
  1828  000512                     __ptext15:
  1829                           	opt stack 0
  1830  000512                     _ADC_IsConversionDone:
  1831                           	opt stack 27
  1832                           
  1833                           ;adc.c: 97: return (!ADCON0bits.GO_nDONE);
  1834                           
  1835                           ;incstack = 0
  1836  000512  B2C2               	btfsc	4034,1,c	;volatile
  1837  000514  D002               	goto	u550
  1838  000516  0E01               	movlw	1
  1839  000518  0012               	return	
  1840  00051A                     u550:
  1841  00051A  0E00               	movlw	0
  1842  00051C  0012               	return	
  1843  00051E                     __end_of_ADC_IsConversionDone:
  1844                           	opt stack 0
  1845                           tblptru	equ	0xFF8
  1846                           prodh	equ	0xFF4
  1847                           prodl	equ	0xFF3
  1848                           intcon	equ	0xFF2
  1849                           intcon2	equ	0xFF1
  1850                           intcon3	equ	0xFF0
  1851                           postinc0	equ	0xFEE
  1852                           wreg	equ	0xFE8
  1853                           indf2	equ	0xFDF
  1854                           fsr2h	equ	0xFDA
  1855                           fsr2l	equ	0xFD9
  1856                           status	equ	0xFD8
  1857                           
  1858 ;; *************** function _ADC_GetConversionResult *****************
  1859 ;; Defined at:
  1860 ;;		line 100 in file "mcc_generated_files/adc.c"
  1861 ;; Parameters:    Size  Location     Type
  1862 ;;		None
  1863 ;; Auto vars:     Size  Location     Type
  1864 ;;		None
  1865 ;; Return value:  Size  Location     Type
  1866 ;;                  2   18[COMRAM] unsigned int 
  1867 ;; Registers used:
  1868 ;;		wreg, status,2, status,0
  1869 ;; Tracked objects:
  1870 ;;		On entry : 0/0
  1871 ;;		On exit  : 0/0
  1872 ;;		Unchanged: 0/0
  1873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1874 ;;      Params:         2       0       0       0       0       0       0       0       0
  1875 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1876 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1877 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1878 ;;Total ram usage:        4 bytes
  1879 ;; Hardware stack levels used:    1
  1880 ;; Hardware stack levels required when called:    3
  1881 ;; This function calls:
  1882 ;;		Nothing
  1883 ;; This function is called by:
  1884 ;;		_main
  1885 ;; This function uses a non-reentrant model
  1886 ;;
  1887                           
  1888                           	psect	text16
  1889  0004DE                     __ptext16:
  1890                           	opt stack 0
  1891  0004DE                     _ADC_GetConversionResult:
  1892                           	opt stack 27
  1893                           
  1894                           ;adc.c: 103: return ((ADRESH << 8) + ADRESL);
  1895                           
  1896                           ;incstack = 0
  1897  0004DE  50C4               	movf	4036,w,c	;volatile
  1898  0004E0  6E16               	movwf	(??_ADC_GetConversionResult+1)& (0+255),c
  1899  0004E2  6A15               	clrf	??_ADC_GetConversionResult& (0+255),c
  1900  0004E4  50C3               	movf	4035,w,c	;volatile
  1901  0004E6  2415               	addwf	??_ADC_GetConversionResult,w,c
  1902  0004E8  6E13               	movwf	?_ADC_GetConversionResult,c
  1903  0004EA  0E00               	movlw	0
  1904  0004EC  2016               	addwfc	??_ADC_GetConversionResult+1,w,c
  1905  0004EE  6E14               	movwf	?_ADC_GetConversionResult+1,c
  1906  0004F0  0012               	return	
  1907  0004F2                     __end_of_ADC_GetConversionResult:
  1908                           	opt stack 0
  1909                           tblptru	equ	0xFF8
  1910                           prodh	equ	0xFF4
  1911                           prodl	equ	0xFF3
  1912                           intcon	equ	0xFF2
  1913                           intcon2	equ	0xFF1
  1914                           intcon3	equ	0xFF0
  1915                           postinc0	equ	0xFEE
  1916                           wreg	equ	0xFE8
  1917                           indf2	equ	0xFDF
  1918                           fsr2h	equ	0xFDA
  1919                           fsr2l	equ	0xFD9
  1920                           status	equ	0xFD8
  1921                           
  1922 ;; *************** function _ISR *****************
  1923 ;; Defined at:
  1924 ;;		line 96 in file "main.c"
  1925 ;; Parameters:    Size  Location     Type
  1926 ;;		None
  1927 ;; Auto vars:     Size  Location     Type
  1928 ;;  status          1   17[COMRAM] unsigned char 
  1929 ;; Return value:  Size  Location     Type
  1930 ;;                  1    wreg      void 
  1931 ;; Registers used:
  1932 ;;		wreg, status,2, status,0, cstack
  1933 ;; Tracked objects:
  1934 ;;		On entry : 0/0
  1935 ;;		On exit  : 0/0
  1936 ;;		Unchanged: 0/0
  1937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1938 ;;      Params:         0       0       0       0       0       0       0       0       0
  1939 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1940 ;;      Temps:         14       0       0       0       0       0       0       0       0
  1941 ;;      Totals:        15       0       0       0       0       0       0       0       0
  1942 ;;Total ram usage:       15 bytes
  1943 ;; Hardware stack levels used:    1
  1944 ;; Hardware stack levels required when called:    2
  1945 ;; This function calls:
  1946 ;;		i2_spi_fast_shift
  1947 ;;		i2_wl_module_config_register
  1948 ;; This function is called by:
  1949 ;;		Interrupt level 2
  1950 ;; This function uses a non-reentrant model
  1951 ;;
  1952                           
  1953                           	psect	intcode
  1954  000008                     __pintcode:
  1955                           	opt stack 0
  1956  000008                     _ISR:
  1957                           	opt stack 24
  1958                           
  1959                           ;incstack = 0
  1960  000008  8234               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1961  00000A  CFFA F004          	movff	pclath,??_ISR
  1962  00000E  CFFB F005          	movff	pclatu,??_ISR+1
  1963  000012  CFE9 F006          	movff	fsr0l,??_ISR+2
  1964  000016  CFEA F007          	movff	fsr0h,??_ISR+3
  1965  00001A  CFE1 F008          	movff	fsr1l,??_ISR+4
  1966  00001E  CFE2 F009          	movff	fsr1h,??_ISR+5
  1967  000022  CFD9 F00A          	movff	fsr2l,??_ISR+6
  1968  000026  CFDA F00B          	movff	fsr2h,??_ISR+7
  1969  00002A  CFF3 F00C          	movff	prodl,??_ISR+8
  1970  00002E  CFF4 F00D          	movff	prodh,??_ISR+9
  1971  000032  CFF6 F00E          	movff	tblptrl,??_ISR+10
  1972  000036  CFF7 F00F          	movff	tblptrh,??_ISR+11
  1973  00003A  CFF8 F010          	movff	tblptru,??_ISR+12
  1974  00003E  CFF5 F011          	movff	tablat,??_ISR+13
  1975                           
  1976                           ;main.c: 98: if( INTCON3bits.INT2IF ){
  1977  000042  A2F0               	btfss	intcon3,1,c	;volatile
  1978  000044  D024               	goto	i2l245
  1979                           
  1980                           ;main.c: 99: unsigned char status;
  1981                           ;main.c: 102: LATBbits.LATB4 = 0;;
  1982  000046  988A               	bcf	3978,4,c	;volatile
  1983                           
  1984                           ;main.c: 103: status = spi_fast_shift(0xFF);
  1985  000048  0EFF               	movlw	255
  1986  00004A  EC81  F002         	call	i2_spi_fast_shift
  1987  00004E  6E12               	movwf	ISR@status,c
  1988                           
  1989                           ;main.c: 104: LATBbits.LATB4 = 1;;
  1990  000050  888A               	bsf	3978,4,c	;volatile
  1991                           
  1992                           ;main.c: 107: if (status & (1<<5)){
  1993  000052  AA12               	btfss	ISR@status,5,c
  1994  000054  D007               	goto	i2l1708
  1995                           
  1996                           ;main.c: 108: wl_module_config_register(0x07, (1<<5));
  1997  000056  0E20               	movlw	32
  1998  000058  6E02               	movwf	i2wl_module_config_register@value,c
  1999  00005A  0E07               	movlw	7
  2000  00005C  EC59  F002         	call	i2_wl_module_config_register
  2001                           
  2002                           ;main.c: 109: PTX=0;
  2003  000060  0E00               	movlw	0
  2004  000062  6E33               	movwf	_PTX,c	;volatile
  2005  000064                     i2l1708:
  2006                           
  2007                           ;main.c: 110: }
  2008                           ;main.c: 112: if (status & (1<<4)){
  2009  000064  A812               	btfss	ISR@status,4,c
  2010  000066  D00B               	goto	i2l1718
  2011                           
  2012                           ;main.c: 113: wl_module_config_register(0x07, (1<<4));
  2013  000068  0E10               	movlw	16
  2014  00006A  6E02               	movwf	i2wl_module_config_register@value,c
  2015  00006C  0E07               	movlw	7
  2016  00006E  EC59  F002         	call	i2_wl_module_config_register
  2017                           
  2018                           ;main.c: 114: LATBbits.LATB3 = 1;;
  2019  000072  868A               	bsf	3978,3,c	;volatile
  2020                           
  2021                           ;main.c: 115: _delay((unsigned long)((10)*(16000000UL/4000000.0)));
  2022  000074  0E0D               	movlw	13
  2023  000076                     i2u73_47:
  2024  000076  2EE8               	decfsz	wreg,f,c
  2025  000078  D7FE               	bra	i2u73_47
  2026  00007A  F000               	nop	
  2027                           
  2028                           ;main.c: 116: LATBbits.LATB3 = 0;;
  2029  00007C  968A               	bcf	3978,3,c	;volatile
  2030  00007E                     i2l1718:
  2031                           
  2032                           ;main.c: 117: }
  2033                           ;main.c: 119: if (status & (1<<0)){
  2034  00007E  A012               	btfss	ISR@status,0,c
  2035  000080  D005               	goto	i2l1726
  2036                           
  2037                           ;main.c: 120: LATBbits.LATB4 = 0;;
  2038  000082  988A               	bcf	3978,4,c	;volatile
  2039                           
  2040                           ;main.c: 121: spi_fast_shift(0xE1);
  2041  000084  0EE1               	movlw	225
  2042  000086  EC81  F002         	call	i2_spi_fast_shift
  2043                           
  2044                           ;main.c: 122: LATBbits.LATB4 = 1;;
  2045  00008A  888A               	bsf	3978,4,c	;volatile
  2046  00008C                     i2l1726:
  2047                           
  2048                           ;main.c: 123: }
  2049                           ;main.c: 125: INTCON3bits.INT2IF = 0;
  2050  00008C  92F0               	bcf	intcon3,1,c	;volatile
  2051  00008E                     i2l245:
  2052  00008E  C011  FFF5         	movff	??_ISR+13,tablat
  2053  000092  C010  FFF8         	movff	??_ISR+12,tblptru
  2054  000096  C00F  FFF7         	movff	??_ISR+11,tblptrh
  2055  00009A  C00E  FFF6         	movff	??_ISR+10,tblptrl
  2056  00009E  C00D  FFF4         	movff	??_ISR+9,prodh
  2057  0000A2  C00C  FFF3         	movff	??_ISR+8,prodl
  2058  0000A6  C00B  FFDA         	movff	??_ISR+7,fsr2h
  2059  0000AA  C00A  FFD9         	movff	??_ISR+6,fsr2l
  2060  0000AE  C009  FFE2         	movff	??_ISR+5,fsr1h
  2061  0000B2  C008  FFE1         	movff	??_ISR+4,fsr1l
  2062  0000B6  C007  FFEA         	movff	??_ISR+3,fsr0h
  2063  0000BA  C006  FFE9         	movff	??_ISR+2,fsr0l
  2064  0000BE  C005  FFFB         	movff	??_ISR+1,pclatu
  2065  0000C2  C004  FFFA         	movff	??_ISR,pclath
  2066  0000C6  9234               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2067  0000C8  0011               	retfie		f
  2068  0000CA                     __end_of_ISR:
  2069                           	opt stack 0
  2070                           pclatu	equ	0xFFB
  2071                           pclath	equ	0xFFA
  2072                           tblptru	equ	0xFF8
  2073                           tblptrh	equ	0xFF7
  2074                           tblptrl	equ	0xFF6
  2075                           tablat	equ	0xFF5
  2076                           prodh	equ	0xFF4
  2077                           prodl	equ	0xFF3
  2078                           intcon	equ	0xFF2
  2079                           intcon2	equ	0xFF1
  2080                           intcon3	equ	0xFF0
  2081                           postinc0	equ	0xFEE
  2082                           fsr0h	equ	0xFEA
  2083                           fsr0l	equ	0xFE9
  2084                           wreg	equ	0xFE8
  2085                           fsr1h	equ	0xFE2
  2086                           fsr1l	equ	0xFE1
  2087                           indf2	equ	0xFDF
  2088                           fsr2h	equ	0xFDA
  2089                           fsr2l	equ	0xFD9
  2090                           status	equ	0xFD8
  2091                           
  2092 ;; *************** function i2_wl_module_config_register *****************
  2093 ;; Defined at:
  2094 ;;		line 418 in file "wl_module.c"
  2095 ;; Parameters:    Size  Location     Type
  2096 ;;  reg             1    wreg     unsigned char 
  2097 ;;  value           1    1[COMRAM] unsigned char 
  2098 ;; Auto vars:     Size  Location     Type
  2099 ;;  reg             1    2[COMRAM] unsigned char 
  2100 ;; Return value:  Size  Location     Type
  2101 ;;                  1    wreg      void 
  2102 ;; Registers used:
  2103 ;;		wreg, status,2, status,0, cstack
  2104 ;; Tracked objects:
  2105 ;;		On entry : 0/0
  2106 ;;		On exit  : 0/0
  2107 ;;		Unchanged: 0/0
  2108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2109 ;;      Params:         1       0       0       0       0       0       0       0       0
  2110 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2111 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2112 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2113 ;;Total ram usage:        2 bytes
  2114 ;; Hardware stack levels used:    1
  2115 ;; Hardware stack levels required when called:    1
  2116 ;; This function calls:
  2117 ;;		i2_spi_fast_shift
  2118 ;; This function is called by:
  2119 ;;		_ISR
  2120 ;; This function uses a non-reentrant model
  2121 ;;
  2122                           
  2123                           	psect	text18
  2124  0004B2                     __ptext18:
  2125                           	opt stack 0
  2126  0004B2                     i2_wl_module_config_register:
  2127                           	opt stack 24
  2128                           
  2129                           ;incstack = 0
  2130                           ;i2wl_module_config_register@reg stored from wreg
  2131  0004B2  6E03               	movwf	i2wl_module_config_register@reg,c
  2132                           
  2133                           ;wl_module.c: 421: LATBbits.LATB4 = 0;;
  2134  0004B4  988A               	bcf	3978,4,c	;volatile
  2135                           
  2136                           ;wl_module.c: 422: spi_fast_shift(0x20 | (0x1F & reg));
  2137  0004B6  5003               	movf	i2wl_module_config_register@reg,w,c
  2138  0004B8  0B1F               	andlw	31
  2139  0004BA  0920               	iorlw	32
  2140  0004BC  EC81  F002         	call	i2_spi_fast_shift
  2141                           
  2142                           ;wl_module.c: 423: spi_fast_shift(value);
  2143  0004C0  5002               	movf	i2wl_module_config_register@value,w,c
  2144  0004C2  EC81  F002         	call	i2_spi_fast_shift
  2145                           
  2146                           ;wl_module.c: 424: LATBbits.LATB4 = 1;;
  2147  0004C6  888A               	bsf	3978,4,c	;volatile
  2148  0004C8  0012               	return		;funcret
  2149  0004CA                     __end_ofi2_wl_module_config_register:
  2150                           	opt stack 0
  2151                           pclatu	equ	0xFFB
  2152                           pclath	equ	0xFFA
  2153                           tblptru	equ	0xFF8
  2154                           tblptrh	equ	0xFF7
  2155                           tblptrl	equ	0xFF6
  2156                           tablat	equ	0xFF5
  2157                           prodh	equ	0xFF4
  2158                           prodl	equ	0xFF3
  2159                           intcon	equ	0xFF2
  2160                           intcon2	equ	0xFF1
  2161                           intcon3	equ	0xFF0
  2162                           postinc0	equ	0xFEE
  2163                           fsr0h	equ	0xFEA
  2164                           fsr0l	equ	0xFE9
  2165                           wreg	equ	0xFE8
  2166                           fsr1h	equ	0xFE2
  2167                           fsr1l	equ	0xFE1
  2168                           indf2	equ	0xFDF
  2169                           fsr2h	equ	0xFDA
  2170                           fsr2l	equ	0xFD9
  2171                           status	equ	0xFD8
  2172                           
  2173 ;; *************** function i2_spi_fast_shift *****************
  2174 ;; Defined at:
  2175 ;;		line 62 in file "spi.c"
  2176 ;; Parameters:    Size  Location     Type
  2177 ;;  data            1    wreg     unsigned char 
  2178 ;; Auto vars:     Size  Location     Type
  2179 ;;  data            1    0[COMRAM] unsigned char 
  2180 ;; Return value:  Size  Location     Type
  2181 ;;                  1    wreg      unsigned char 
  2182 ;; Registers used:
  2183 ;;		wreg, status,2
  2184 ;; Tracked objects:
  2185 ;;		On entry : 0/0
  2186 ;;		On exit  : 0/0
  2187 ;;		Unchanged: 0/0
  2188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2189 ;;      Params:         0       0       0       0       0       0       0       0       0
  2190 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2191 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2192 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2193 ;;Total ram usage:        1 bytes
  2194 ;; Hardware stack levels used:    1
  2195 ;; This function calls:
  2196 ;;		Nothing
  2197 ;; This function is called by:
  2198 ;;		_ISR
  2199 ;;		i2_wl_module_config_register
  2200 ;; This function uses a non-reentrant model
  2201 ;;
  2202                           
  2203                           	psect	text19
  2204  000502                     __ptext19:
  2205                           	opt stack 0
  2206  000502                     i2_spi_fast_shift:
  2207                           	opt stack 24
  2208                           
  2209                           ;incstack = 0
  2210                           ;i2spi_fast_shift@data stored from wreg
  2211  000502  6E01               	movwf	i2spi_fast_shift@data,c
  2212                           
  2213                           ;spi.c: 63: SSP1BUF = data;
  2214  000504  C001  FFC9         	movff	i2spi_fast_shift@data,4041	;volatile
  2215  000508                     i2l190:
  2216  000508  A69E               	btfss	3998,3,c	;volatile
  2217  00050A  D7FE               	goto	i2l190
  2218                           
  2219                           ;spi.c: 65: PIR1bits.SSP1IF = 0;
  2220  00050C  969E               	bcf	3998,3,c	;volatile
  2221                           
  2222                           ;spi.c: 66: return SSP1BUF;
  2223  00050E  50C9               	movf	4041,w,c	;volatile
  2224  000510  0012               	return		;funcret
  2225  000512                     __end_ofi2_spi_fast_shift:
  2226                           	opt stack 0
  2227  0000                     pclatu	equ	0xFFB
  2228                           pclath	equ	0xFFA
  2229                           tblptru	equ	0xFF8
  2230                           tblptrh	equ	0xFF7
  2231                           tblptrl	equ	0xFF6
  2232                           tablat	equ	0xFF5
  2233                           prodh	equ	0xFF4
  2234                           prodl	equ	0xFF3
  2235                           intcon	equ	0xFF2
  2236                           intcon2	equ	0xFF1
  2237                           intcon3	equ	0xFF0
  2238                           postinc0	equ	0xFEE
  2239                           fsr0h	equ	0xFEA
  2240                           fsr0l	equ	0xFE9
  2241                           wreg	equ	0xFE8
  2242                           fsr1h	equ	0xFE2
  2243                           fsr1l	equ	0xFE1
  2244                           indf2	equ	0xFDF
  2245                           fsr2h	equ	0xFDA
  2246                           fsr2l	equ	0xFD9
  2247                           status	equ	0xFD8
  2248                           pclatu	equ	0xFFB
  2249                           pclath	equ	0xFFA
  2250                           tblptru	equ	0xFF8
  2251                           tblptrh	equ	0xFF7
  2252                           tblptrl	equ	0xFF6
  2253                           tablat	equ	0xFF5
  2254                           prodh	equ	0xFF4
  2255                           prodl	equ	0xFF3
  2256                           intcon	equ	0xFF2
  2257                           intcon2	equ	0xFF1
  2258                           intcon3	equ	0xFF0
  2259                           postinc0	equ	0xFEE
  2260                           fsr0h	equ	0xFEA
  2261                           fsr0l	equ	0xFE9
  2262                           wreg	equ	0xFE8
  2263                           fsr1h	equ	0xFE2
  2264                           fsr1l	equ	0xFE1
  2265                           indf2	equ	0xFDF
  2266                           fsr2h	equ	0xFDA
  2267                           fsr2l	equ	0xFD9
  2268                           status	equ	0xFD8
  2269                           
  2270                           	psect	rparam
  2271  0000                     pclatu	equ	0xFFB
  2272                           pclath	equ	0xFFA
  2273                           tblptru	equ	0xFF8
  2274                           tblptrh	equ	0xFF7
  2275                           tblptrl	equ	0xFF6
  2276                           tablat	equ	0xFF5
  2277                           prodh	equ	0xFF4
  2278                           prodl	equ	0xFF3
  2279                           intcon	equ	0xFF2
  2280                           intcon2	equ	0xFF1
  2281                           intcon3	equ	0xFF0
  2282                           postinc0	equ	0xFEE
  2283                           fsr0h	equ	0xFEA
  2284                           fsr0l	equ	0xFE9
  2285                           wreg	equ	0xFE8
  2286                           fsr1h	equ	0xFE2
  2287                           fsr1l	equ	0xFE1
  2288                           indf2	equ	0xFDF
  2289                           fsr2h	equ	0xFDA
  2290                           fsr2l	equ	0xFD9
  2291                           status	equ	0xFD8
  2292                           
  2293                           	psect	temp
  2294  000034                     btemp:
  2295                           	opt stack 0
  2296  000034                     	ds	1
  2297  0000                     int$flags	set	btemp
  2298                           pclatu	equ	0xFFB
  2299                           pclath	equ	0xFFA
  2300                           tblptru	equ	0xFF8
  2301                           tblptrh	equ	0xFF7
  2302                           tblptrl	equ	0xFF6
  2303                           tablat	equ	0xFF5
  2304                           prodh	equ	0xFF4
  2305                           prodl	equ	0xFF3
  2306                           intcon	equ	0xFF2
  2307                           intcon2	equ	0xFF1
  2308                           intcon3	equ	0xFF0
  2309                           postinc0	equ	0xFEE
  2310                           fsr0h	equ	0xFEA
  2311                           fsr0l	equ	0xFE9
  2312                           wreg	equ	0xFE8
  2313                           fsr1h	equ	0xFE2
  2314                           fsr1l	equ	0xFE1
  2315                           indf2	equ	0xFDF
  2316                           fsr2h	equ	0xFDA
  2317                           fsr2l	equ	0xFD9
  2318                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         16
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     35      51
    BANK0           160     35      35
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    spi_transmit_sync@data	PTR unsigned char  size(2) Largest target is 32
		 -> main@hall(BANK0[32]), wl_module_set_rx_pw@payloadwidth(COMRAM[1]), wl_module_power_down@config(COMRAM[1]), wl_module_set_as_tx@config(COMRAM[1]), 
		 -> wl_module_tx_config@tx_addr(COMRAM[5]), wl_module_rx_config@data(COMRAM[5]), 

    wl_module_send@value	PTR unsigned char  size(2) Largest target is 32
		 -> main@hall(BANK0[32]), 

    wl_module_write_register@value	PTR unsigned char  size(2) Largest target is 5
		 -> wl_module_set_rx_pw@payloadwidth(COMRAM[1]), wl_module_power_down@config(COMRAM[1]), wl_module_set_as_tx@config(COMRAM[1]), wl_module_tx_config@tx_addr(COMRAM[5]), 
		 -> wl_module_rx_config@data(COMRAM[5]), 

    wl_module_set_TADDR@adr	PTR unsigned char  size(2) Largest target is 5
		 -> wl_module_tx_config@tx_addr(COMRAM[5]), 

    wl_module_set_RADDR@adr	PTR unsigned char  size(2) Largest target is 5
		 -> wl_module_tx_config@tx_addr(COMRAM[5]), 


Critical Paths under _main in COMRAM

    _main->_wl_module_tx_config
    _wl_module_tx_config->_wl_module_set_RADDR
    _wl_module_tx_config->_wl_module_set_TADDR
    _wl_module_set_TADDR->_wl_module_write_register
    _wl_module_set_RADDR->_wl_module_write_register
    _wl_module_write_register->_spi_transmit_sync
    _wl_module_send->_spi_transmit_sync
    _wl_module_config_register->_spi_fast_shift
    ___lwdiv->___wmul

Critical Paths under _ISR in COMRAM

    _ISR->i2_wl_module_config_register
    i2_wl_module_config_register->i2_spi_fast_shift

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                35    35      0   10765
                                              0 BANK0     35    35      0
            _ADC_GetConversionResult
               _ADC_IsConversionDone
                _ADC_StartConversion
                            ___lwdiv
                             ___wmul
                        __delay_10ms
                     _wl_module_init
                     _wl_module_send
                _wl_module_tx_config
 ---------------------------------------------------------------------------------
 (1) _wl_module_tx_config                                  6     6      0    7227
                                             29 COMRAM     6     6      0
          _wl_module_config_register
                _wl_module_set_RADDR
                _wl_module_set_TADDR
 ---------------------------------------------------------------------------------
 (2) _wl_module_set_TADDR                                  2     0      2    2065
                                             27 COMRAM     2     0      2
           _wl_module_write_register
 ---------------------------------------------------------------------------------
 (2) _wl_module_set_RADDR                                  2     0      2    2065
                                             27 COMRAM     2     0      2
           _wl_module_write_register
 ---------------------------------------------------------------------------------
 (3) _wl_module_write_register                             4     1      3    1572
                                             23 COMRAM     4     1      3
                     _spi_fast_shift
                  _spi_transmit_sync
 ---------------------------------------------------------------------------------
 (1) _wl_module_send                                       3     0      3    2402
                                             23 COMRAM     3     0      3
                     _spi_fast_shift
                  _spi_transmit_sync
          _wl_module_config_register
 ---------------------------------------------------------------------------------
 (2) _wl_module_config_register                            2     1      1    1785
                                             19 COMRAM     2     1      1
                     _spi_fast_shift
 ---------------------------------------------------------------------------------
 (4) _spi_fast_shift                                       1     1      0      22
                                             18 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _spi_transmit_sync                                    5     1      4     379
                                             18 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) _wl_module_init                                       0     0      0       0
                           _spi_init
 ---------------------------------------------------------------------------------
 (2) _spi_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) __delay_10ms                                          3     1      2     111
                                             18 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     386
                                             18 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     395
                                             24 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _ADC_StartConversion                                  2     0      2       0
                                             18 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _ADC_IsConversionDone                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversionResult                              4     2      2       0
                                             18 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                 15    15      0     207
                                              3 COMRAM    15    15      0
                   i2_spi_fast_shift
        i2_wl_module_config_register
 ---------------------------------------------------------------------------------
 (6) i2_wl_module_config_register                          2     1      1     118
                                              1 COMRAM     2     1      1
                   i2_spi_fast_shift
 ---------------------------------------------------------------------------------
 (7) i2_spi_fast_shift                                     1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversionResult
   _ADC_IsConversionDone
   _ADC_StartConversion
   ___lwdiv
     ___wmul (ARG)
   ___wmul
   __delay_10ms
   _wl_module_init
     _spi_init
   _wl_module_send
     _spi_fast_shift
     _spi_transmit_sync
     _wl_module_config_register
       _spi_fast_shift
   _wl_module_tx_config
     _wl_module_config_register
       _spi_fast_shift
     _wl_module_set_RADDR
       _wl_module_write_register
         _spi_fast_shift
         _spi_transmit_sync
     _wl_module_set_TADDR
       _wl_module_write_register
         _spi_fast_shift
         _spi_transmit_sync

 _ISR (ROOT)
   i2_spi_fast_shift
   i2_wl_module_config_register
     i2_spi_fast_shift

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     23      23       5       21.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     23      33       1       54.3%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      56       6        0.0%
DATA                 0      0      56       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Thu May 25 16:24:47 2017

                __size_of__delay_10ms 0020                   ___wmul@multiplicand 0015  
                        __CFG_CP0$OFF 000000                          __CFG_CP1$OFF 000000  
                        __CFG_CP2$OFF 000000                          __CFG_CP3$OFF 000000  
                         __CFG_LVP$ON 000000                                   l224 0446  
                                 l174 03A8                                   l190 04F8  
                                 l741 0346                          __CFG_CPB$OFF 000000  
                        __CFG_CPD$OFF 000000                                   _ISR 0008  
                                 u550 051A                                   u717 0390  
                                 u727 0438                                   _PTX 0033  
                                 prod 000FF3                                   wreg 000FE8  
         __end_of_wl_module_set_RADDR 0482           __end_of_wl_module_set_TADDR 04DE  
                                ?_ISR 0001                                  l2070 027E  
                                l2080 02A4                                  l2066 0268  
                                l2076 029A                                  l2086 02D6  
                                l1800 01E0                                  l1810 0234  
                                l1732 039C                                  l1736 03BC  
                                l1816 0350                                  l1808 020E  
                                l1770 00FA                                  l1844 0432  
                                l1870 0314                                  l1782 0156  
                                l1872 031C                                  l1776 0128  
                                l1882 033C                                  l1874 0320  
                                l1794 01B2                                  l1788 0184  
                                _LATA 000F89                                  _LATB 000F8A  
                                _LATC 000F8B                                  _LATD 000F8C  
                                _LATE 000F8D                                  _WPUB 000F85  
                       __CFG_FCMEN$ON 000000                        _wl_module_init 049A  
                      _wl_module_send 0350                                  _main 0244  
                                fsr0h 000FEA                                  fsr1h 000FE2  
                                fsr2h 000FDA                                  fsr0l 000FE9  
                                indf2 000FDF                                  fsr1l 000FE1  
                                fsr2l 000FD9                                  btemp 0034  
                       __CFG_BORV$190 000000                                  prodh 000FF4  
                                prodl 000FF3                                  start 00CA  
                       __CFG_IESO$OFF 000000                         __CFG_FOSC$HSH 000000  
                       __CFG_MCLRE$ON 000000                          ___param_bank 000000  
                               ??_ISR 0004           __end_of_wl_module_tx_config 0244  
        ?i2_wl_module_config_register 0002             _wl_module_config_register 0482  
                               ?_main 0001                        __CFG_DEBUG$OFF 000000  
                     __end_of___lwdiv 0350                                 i2l245 008E  
                               i2l190 0508                                 _TRISA 000F92  
                               _TRISB 000F93                                 _TRISC 000F94  
                               _TRISD 000F95                                 _TRISE 000F96  
    __size_of_ADC_GetConversionResult 0014                         __CFG_WRT0$OFF 000000  
                       __CFG_WRT1$OFF 000000                         __CFG_WRT2$OFF 000000  
                       __CFG_WRT3$OFF 000000                        __CFG_EBTR0$OFF 000000  
                      __CFG_EBTR1$OFF 000000                        __CFG_EBTR2$OFF 000000  
                      __CFG_EBTR3$OFF 000000                         __CFG_WRTB$OFF 000000  
                       __CFG_WRTC$OFF 000000                         __CFG_WRTD$OFF 000000  
                      __CFG_EBTRB$OFF 000000                __end_of_wl_module_init 04B2  
              __end_of_wl_module_send 039A                                 main@k 0082  
                               pclath 000FFA                                 tablat 000FF5  
                               status 000FD8                        __CFG_T3CMX$RC0 000000  
                      __CFG_ICPRT$OFF 000000                        __CFG_PBADEN$ON 000000  
    __end_of_wl_module_write_register 0410                     wl_module_send@len 001A  
                     __initialization 0450                          __end_of_main 02FE  
                   ?i2_spi_fast_shift 0001                        __CFG_PCLKEN$ON 000000  
                  ??i2_spi_fast_shift 0001         ??i2_wl_module_config_register 0003  
                              ??_main 0024                         __activetblptr 000002  
                      __CFG_SDOMX$RB3 000000               spi_transmit_sync@length 0015  
                     __CFG_CCP2MX$RC1 000000         __size_of_ADC_IsConversionDone 000C  
                  spi_fast_shift@data 0013                                _ADCON0 000FC2  
                              _ADCON1 000FC1                                _ADCON2 000FC0  
                              _ACTCON 000FB5                                _ADRESH 000FC4  
                              _ADRESL 000FC3                      ??_spi_fast_shift 0013  
                     ?_wl_module_init 0001                                _ANSELA 000F5B  
                              _ANSELB 000F5C                                _ANSELC 000F5D  
                              _ANSELD 000F5E                                _ANSELE 000F5F  
                     ?_wl_module_send 0018                                i2l1708 0064  
                              i2l1726 008C                                i2l1718 007E  
                      __CFG_WDTEN$OFF 000000                                _OSCCON 000FD3  
                      __CFG_XINST$OFF 000000                wl_module_set_RADDR@adr 001C  
                              ___wmul 03C6                wl_module_set_TADDR@adr 001C  
                      __CFG_STVREN$ON 000000                             ??___lwdiv 001D  
                              clear_0 0456                                tblptrh 000FF7  
                              tblptrl 000FF6                                tblptru 000FF8  
                    __end_of_spi_init 0430                  __CFG_LS48MHZ$SYS24X4 000000  
                          __accesstop 0060               __end_of__initialization 045C  
                       ___rparam_used 000001          __size_of_ADC_StartConversion 0004  
                      __pcstackCOMRAM 0001                 spi_transmit_sync@data 0013  
             _ADC_GetConversionResult 04DE     __size_of_wl_module_write_register 0024  
           ?_wl_module_write_register 0018    __size_of_wl_module_config_register 0018  
                           ISR@status 0012                         ??__delay_10ms 0015  
                   __CFG_PLLSEL$PLL4X 000000                               ?___wmul 0013  
                             _OSCCON2 000FD2                               _OSCTUNE 000F9B  
                             i2u73_47 0076                               _SSP1BUF 000FC9  
   __end_of_wl_module_config_register 049A          __size_of_wl_module_set_RADDR 0018  
        __size_of_wl_module_set_TADDR 0014                               __Hparam 0000  
                             __Lparam 0000                             ?_spi_init 0001  
                     __size_of___wmul 0026                               ___lwdiv 02FE  
           ??_ADC_GetConversionResult 0015                               __pcinit 0450  
                             __ramtop 0800                   __end_of__delay_10ms 0450  
                             __ptext0 0244                               __ptext1 00CE  
                             __ptext2 04CA                               __ptext3 046A  
                             __ptext4 03EC                               __ptext5 0350  
                             __ptext6 0482                               __ptext7 04F2  
                             __ptext8 039A                               __ptext9 049A  
                        __size_of_ISR 00C2                      ??_wl_module_init 0013  
        __size_of_wl_module_tx_config 0176                      ??_wl_module_send 001B  
           __size_ofi2_spi_fast_shift 0010                  end_of_initialization 045C  
                       __Lmediumconst 0000          __end_of_ADC_IsConversionDone 051E  
                          ??_spi_init 0013                               postinc0 000FEE  
            wl_module_tx_config@tx_nr 001E                    __delay_10ms@length 0013  
        wl_module_config_register@reg 0015           wl_module_write_register@len 001A  
         wl_module_write_register@reg 001B                             _TRISAbits 000F92  
                           _TRISBbits 000F93                             _TRISCbits 000F94  
                 _ADC_StartConversion 051E                   wl_module_send@value 0018  
                ?_ADC_StartConversion 0013                           __delay_10ms 0430  
 __end_ofi2_wl_module_config_register 04CA           i2_wl_module_config_register 04B2  
                      __end_of___wmul 03EC                   start_initialization 0450  
                         __end_of_ISR 00CA                  i2spi_fast_shift@data 0001  
                     __CFG_nLPBOR$OFF 000000                 ??_ADC_StartConversion 0015  
             __size_of_spi_fast_shift 0010                              ??___wmul 0017  
                 _wl_module_set_RADDR 046A                   _wl_module_set_TADDR 04CA  
                  main@convertedValue 0080                           __pbssCOMRAM 0024  
                   _spi_transmit_sync 039A                         __pcstackBANK0 0060  
                _ADC_IsConversionDone 0512                      i2_spi_fast_shift 0502  
                     __CFG_nPWRTEN$ON 000000                    ?_spi_transmit_sync 0013  
                spi_transmit_sync@tmp 0017                  ?_wl_module_set_RADDR 001C  
                ?_wl_module_set_TADDR 001C                   ??_spi_transmit_sync 0017  
                 _wl_module_tx_config 00CE                      ___lwdiv@dividend 0019  
          wl_module_tx_config@tx_addr 001F                             __pintcode 0008  
                            ?___lwdiv 0019                     __size_of_spi_init 0020  
            _wl_module_write_register 03EC             __end_of_spi_transmit_sync 03C6  
                ?_wl_module_tx_config 0001                 ?_ADC_IsConversionDone 0001  
                    ___lwdiv@quotient 001E            ?_wl_module_config_register 0014  
               ??_wl_module_set_RADDR 001E                 ??_wl_module_set_TADDR 001E  
                      ___wmul@product 0017                              _LATBbits 000F8A  
      wl_module_config_register@value 0014      i2wl_module_config_register@value 0002  
                            _PIR1bits 000F9E                      __CFG_WDTPS$32768 000000  
                          _ADCON0bits 000FC2                     ___wmul@multiplier 0013  
       wl_module_write_register@value 0018                 ??_wl_module_tx_config 001E  
                   __CFG_CFGPLLEN$OFF 000000                       _received_string 0024  
                         _INTCON2bits 000FF1                           _INTCON3bits 000FF0  
      i2wl_module_config_register@reg 0003                              __Hrparam 0000  
                      _spi_fast_shift 04F2                              __Lrparam 0000  
                        ?__delay_10ms 0013              ?_ADC_GetConversionResult 0013  
                  __CFG_BOREN$SBORDIS 000000                      __size_of___lwdiv 0052  
          __size_of_spi_transmit_sync 002C                            _ANSELBbits 000F5C  
              ??_ADC_IsConversionDone 0013                       ___lwdiv@divisor 001B  
                     ___lwdiv@counter 001D  __size_ofi2_wl_module_config_register 0018  
                            __ptext10 0410                              __ptext11 0430  
                            __ptext12 03C6                              __ptext13 02FE  
                            __ptext14 051E                              __ptext15 0512  
                            __ptext16 04DE                              __ptext18 04B2  
                            __ptext19 0502                          _SSP1CON1bits 000FC6  
             __size_of_wl_module_init 0018                         __size_of_main 00BA  
             __size_of_wl_module_send 004A                __end_of_spi_fast_shift 0502  
            __end_ofi2_spi_fast_shift 0512                              _spi_init 0410  
                            int$flags 0034                              main@hall 0060  
                        _SSP1STATbits 000FC7                            _INTCONbits 000FF2  
                            intlevel2 0000           __end_of_ADC_StartConversion 0522  
     __end_of_ADC_GetConversionResult 04F2                       ?_spi_fast_shift 0001  
          ??_wl_module_write_register 001B                  __CFG_CPUDIV$NOCLKDIV 000000  
         ??_wl_module_config_register 0015  
